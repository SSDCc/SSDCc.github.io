{"version":3,"file":"index.js","sources":["../../../plugins/com.msgbyte.env.electron/src/translate.ts","../../../plugins/com.msgbyte.env.electron/src/utils.ts","../../../plugins/com.msgbyte.env.electron/src/checkUpdate.tsx","../../../plugins/com.msgbyte.env.electron/src/DeviceInfoPanel.tsx","../../../plugins/com.msgbyte.env.electron/src/index.tsx"],"sourcesContent":["import { localTrans } from '@capital/common';\n\nexport const Translate = {\n  deviceInfo: localTrans({\n    'zh-CN': '设备信息',\n    'en-US': 'Device Info',\n  }),\n  clientName: localTrans({\n    'zh-CN': '客户端名称',\n    'en-US': 'Client Name',\n  }),\n  clientVersion: localTrans({\n    'zh-CN': '客户端版本号',\n    'en-US': 'Client Version',\n  }),\n  platform: localTrans({\n    'zh-CN': '平台',\n    'en-US': 'Platform',\n  }),\n  newVersionTip: localTrans({\n    'zh-CN': '新版本提示',\n    'en-US': 'New Version Upgrade Tip',\n  }),\n  newVersionDesc: localTrans({\n    'zh-CN': '发现有新的版本可以安装',\n    'en-US': 'A new version was found to be installed',\n  }),\n  upgradeNow: localTrans({\n    'zh-CN': '立即更新',\n    'en-US': 'Upgrade Now',\n  }),\n  checkVersion: localTrans({\n    'zh-CN': '检查更新',\n    'en-US': 'Check for updates',\n  }),\n  isLatest: localTrans({\n    'zh-CN': '已经是最新版',\n    'en-US': 'Already the latest version',\n  }),\n};\n","import { sharedEvent, postMessageEvent } from '@capital/common';\n\n/**\n * 转发事件\n */\nexport function forwardSharedEvent(\n  eventName: string,\n  processPayload?: (payload: any) => Promise<{ type: string; payload: any }>\n) {\n  sharedEvent.on(eventName as any, async (payload: any) => {\n    let type = eventName;\n    if (processPayload) {\n      const res = await processPayload(payload);\n      if (!res) {\n        // Skip if res is undefined\n        return;\n      }\n\n      payload = res.payload;\n      type = res.type;\n    }\n\n    postMessageEvent(type, payload);\n  });\n}\n\ninterface ElectronDeviceInfo {\n  name: string;\n  version: string;\n  platform: string;\n}\nexport function getDeviceInfo() {\n  const deviceInfo: ElectronDeviceInfo = {\n    name: '',\n    version: '0.0.0',\n    platform: 'windows',\n    ...((window as any).__electronDeviceInfo ?? {}),\n  };\n\n  return deviceInfo;\n}\n","import { Button, notification } from '@capital/component';\nimport React from 'react';\nimport { Translate } from './translate';\nimport { getDeviceInfo } from './utils';\n\nconst url = 'https://tailchat.msgbyte.com/downloads/client.json';\n\nexport async function checkUpdate(): Promise<boolean> {\n  const deviceInfo = getDeviceInfo();\n  const [semver, config] = await Promise.all([\n    import('semver'),\n    fetch(url).then((res) => res.json()),\n  ]);\n\n  const version = deviceInfo.version;\n  const platform = deviceInfo.platform;\n  const latestConfig = config?.[platform];\n  const latestVersion = latestConfig?.version;\n  const latestUrl = latestConfig?.url;\n\n  if (!latestVersion) {\n    console.warn('Not found latest version');\n    return true;\n  }\n  if (!latestUrl) {\n    console.warn('Not found latest url');\n    return true;\n  }\n\n  if (version === '0.0.0') {\n    console.warn('Current version not valid');\n    return true;\n  }\n\n  if (semver.gt(latestVersion, version)) {\n    // 有新版本\n    notification.info({\n      message: Translate.newVersionTip,\n      description: (\n        <div>\n          <div>{Translate.newVersionDesc}</div>\n          <div>\n            {version} -&gt; {latestVersion}\n          </div>\n        </div>\n      ),\n      btn: (\n        <Button\n          type=\"primary\"\n          onClick={() => {\n            window.open(latestUrl);\n          }}\n        >\n          {Translate.upgradeNow}\n        </Button>\n      ),\n      placement: 'topRight',\n      duration: 0,\n    });\n\n    return true;\n  }\n\n  return false;\n}\n","import { showSuccessToasts } from '@capital/common';\nimport { Button } from '@capital/component';\nimport React from 'react';\nimport { checkUpdate } from './checkUpdate';\nimport { Translate } from './translate';\nimport { getDeviceInfo } from './utils';\n\nexport const DeviceInfoPanel: React.FC = React.memo(() => {\n  const deviceInfo = getDeviceInfo();\n\n  return (\n    <div>\n      <div>\n        {Translate.clientName}: {deviceInfo.name}\n      </div>\n      <div>\n        {Translate.clientVersion}: {deviceInfo.version}\n      </div>\n      <div>\n        {Translate.platform}: {deviceInfo.platform}\n      </div>\n      <Button\n        onClick={async () => {\n          const res = await checkUpdate();\n          if (res === false) {\n            showSuccessToasts(Translate.isLatest);\n          }\n        }}\n      >\n        {Translate.checkVersion}\n      </Button>\n    </div>\n  );\n});\nDeviceInfoPanel.displayName = 'DeviceInfoPanel';\n","import {\n  regCustomPanel,\n  regChatInputButton,\n  postMessageEvent,\n} from '@capital/common';\nimport { Icon } from '@capital/component';\nimport React from 'react';\nimport { DeviceInfoPanel } from './DeviceInfoPanel';\nimport { Translate } from './translate';\nimport { forwardSharedEvent } from './utils';\nimport { checkUpdate } from './checkUpdate';\n\nconst PLUGIN_NAME = 'Electron Support';\n\nconsole.log(`Plugin ${PLUGIN_NAME} is loaded`);\n\nregCustomPanel({\n  position: 'setting',\n  icon: '',\n  name: 'com.msgbyte.env.electron/deviceInfoPanel',\n  label: Translate.deviceInfo,\n  render: DeviceInfoPanel,\n});\n\nregChatInputButton({\n  render: () => {\n    return (\n      <Icon\n        className=\"text-2xl cursor-pointer\"\n        icon=\"mdi:content-cut\"\n        rotate={3}\n        onClick={() => {\n          postMessageEvent('callScreenshotsTool');\n        }}\n      />\n    );\n  },\n});\n\nforwardSharedEvent('receiveUnmutedMessage');\n\nsetTimeout(() => {\n  checkUpdate();\n}, 1000);\n"],"names":["localTrans","sharedEvent","postMessageEvent","notification","React","Button","showSuccessToasts","regCustomPanel","regChatInputButton","Icon"],"mappings":";;;;;;EAEO,MAAM,SAAY,GAAA;EAAA,EACvB,YAAYA,iBAAW,CAAA;EAAA,IACrB,OAAS,EAAA,0BAAA;EAAA,IACT,OAAS,EAAA,aAAA;EAAA,GAAA,CAAA;EAAA,EAEX,YAAYA,iBAAW,CAAA;EAAA,IACrB,OAAS,EAAA,gCAAA;EAAA,IACT,OAAS,EAAA,aAAA;EAAA,GAAA,CAAA;EAAA,EAEX,eAAeA,iBAAW,CAAA;EAAA,IACxB,OAAS,EAAA,sCAAA;EAAA,IACT,OAAS,EAAA,gBAAA;EAAA,GAAA,CAAA;EAAA,EAEX,UAAUA,iBAAW,CAAA;EAAA,IACnB,OAAS,EAAA,cAAA;EAAA,IACT,OAAS,EAAA,UAAA;EAAA,GAAA,CAAA;EAAA,EAEX,eAAeA,iBAAW,CAAA;EAAA,IACxB,OAAS,EAAA,gCAAA;EAAA,IACT,OAAS,EAAA,yBAAA;EAAA,GAAA,CAAA;EAAA,EAEX,gBAAgBA,iBAAW,CAAA;EAAA,IACzB,OAAS,EAAA,oEAAA;EAAA,IACT,OAAS,EAAA,yCAAA;EAAA,GAAA,CAAA;EAAA,EAEX,YAAYA,iBAAW,CAAA;EAAA,IACrB,OAAS,EAAA,0BAAA;EAAA,IACT,OAAS,EAAA,aAAA;EAAA,GAAA,CAAA;EAAA,EAEX,cAAcA,iBAAW,CAAA;EAAA,IACvB,OAAS,EAAA,0BAAA;EAAA,IACT,OAAS,EAAA,mBAAA;EAAA,GAAA,CAAA;EAAA,EAEX,UAAUA,iBAAW,CAAA;EAAA,IACnB,OAAS,EAAA,sCAAA;EAAA,IACT,OAAS,EAAA,4BAAA;EAAA,GAAA,CAAA;EAAA,CAAA;;;;;;;;;;;;;;;;;;EChCN,SAAA,kBAAA,CACL,WACA,cACA,EAAA;EACA,EAAYC,kBAAA,CAAA,EAAA,CAAG,SAAkB,EAAA,OAAO,OAAiB,KAAA;EACvD,IAAA,IAAI,IAAO,GAAA,SAAA,CAAA;EACX,IAAA,IAAI,cAAgB,EAAA;EAClB,MAAM,MAAA,GAAA,GAAM,MAAM,cAAe,CAAA,OAAA,CAAA,CAAA;EACjC,MAAA,IAAI,CAAC,GAAK,EAAA;EAER,QAAA,OAAA;EAAA,OAAA;EAGF,MAAA,OAAA,GAAU,GAAI,CAAA,OAAA,CAAA;EACd,MAAA,IAAA,GAAO,GAAI,CAAA,IAAA,CAAA;EAAA,KAAA;EAGb,IAAAC,uBAAA,CAAiB,IAAM,EAAA,OAAA,CAAA,CAAA;EAAA,GAAA,CAAA,CAAA;EAAA,CAAA;EASK,SAAA,aAAA,GAAA;EA/BhC,EAAA,IAAA,EAAA,CAAA;EAgCE,EAAA,MAAM,UAAiC,GAAA,cAAA,CAAA;EAAA,IACrC,IAAM,EAAA,EAAA;EAAA,IACN,OAAS,EAAA,OAAA;EAAA,IACT,QAAU,EAAA,SAAA;EAAA,GACL,EAAA,CAAA,EAAA,GAAA,MAAA,CAAe,yBAAf,IAAuC,GAAA,EAAA,GAAA,EAAA,CAAA,CAAA;EAG9C,EAAO,OAAA,UAAA,CAAA;EAAA;;EClCT,MAAM,GAAM,GAAA,oDAAA,CAAA;EAE0C,eAAA,WAAA,GAAA;EACpD,EAAA,MAAM,UAAa,GAAA,aAAA,EAAA,CAAA;EACnB,EAAA,MAAM,CAAC,MAAA,EAAQ,MAAU,CAAA,GAAA,MAAM,QAAQ,GAAI,CAAA;EAAA,IACzC,kDAAO,kBAAA,8DAAA;EAAA,IACP,KAAM,CAAA,GAAA,CAAA,CAAK,IAAK,CAAA,CAAC,QAAQ,GAAI,CAAA,IAAA,EAAA,CAAA;EAAA,GAAA,CAAA,CAAA;EAG/B,EAAA,MAAM,UAAU,UAAW,CAAA,OAAA,CAAA;EAC3B,EAAA,MAAM,WAAW,UAAW,CAAA,QAAA,CAAA;EAC5B,EAAA,MAAM,eAAe,MAAS,IAAA,IAAA,GAAA,KAAA,CAAA,GAAA,MAAA,CAAA,QAAA,CAAA,CAAA;EAC9B,EAAA,MAAM,gBAAgB,YAAc,IAAA,IAAA,GAAA,KAAA,CAAA,GAAA,YAAA,CAAA,OAAA,CAAA;EACpC,EAAA,MAAM,YAAY,YAAc,IAAA,IAAA,GAAA,KAAA,CAAA,GAAA,YAAA,CAAA,GAAA,CAAA;EAEhC,EAAA,IAAI,CAAC,aAAe,EAAA;EAClB,IAAA,OAAA,CAAQ,IAAK,CAAA,0BAAA,CAAA,CAAA;EACb,IAAO,OAAA,IAAA,CAAA;EAAA,GAAA;EAET,EAAA,IAAI,CAAC,SAAW,EAAA;EACd,IAAA,OAAA,CAAQ,IAAK,CAAA,sBAAA,CAAA,CAAA;EACb,IAAO,OAAA,IAAA,CAAA;EAAA,GAAA;EAGT,EAAA,IAAI,YAAY,OAAS,EAAA;EACvB,IAAA,OAAA,CAAQ,IAAK,CAAA,2BAAA,CAAA,CAAA;EACb,IAAO,OAAA,IAAA,CAAA;EAAA,GAAA;EAGT,EAAI,IAAA,MAAA,CAAO,EAAG,CAAA,aAAA,EAAe,OAAU,CAAA,EAAA;EAErC,IAAAC,sBAAA,CAAa,IAAK,CAAA;EAAA,MAChB,SAAS,SAAU,CAAA,aAAA;EAAA,MACnB,WACE,kBAAAC,yBAAA,CAAA,aAAA,CAAC,KAAD,EAAA,IAAA,kBACGA,yBAAA,CAAA,aAAA,CAAA,KAAA,EAAD,IAAM,EAAA,SAAA,CAAU,cAChB,CAAA,kBAAAA,yBAAA,CAAA,aAAA,CAAC,KAAD,EAAA,IAAA,EACG,SAAQ,MAAQ,EAAA,aAAA,CAAA,CAAA;EAAA,MAIvB,GAAA,0DACGC,gBAAD,EAAA;EAAA,QACE,IAAK,EAAA,SAAA;EAAA,QACL,SAAS,MAAM;EACb,UAAA,MAAA,CAAO,IAAK,CAAA,SAAA,CAAA,CAAA;EAAA,SAAA;EAAA,OAAA,EAGb,SAAU,CAAA,UAAA,CAAA;EAAA,MAGf,SAAW,EAAA,UAAA;EAAA,MACX,QAAU,EAAA,CAAA;EAAA,KAAA,CAAA,CAAA;EAGZ,IAAO,OAAA,IAAA,CAAA;EAAA,GAAA;EAGT,EAAO,OAAA,KAAA,CAAA;EAAA;;ECxDI,MAAA,eAAA,GAA4BD,yBAAM,CAAA,IAAA,CAAK,MAAM;EACxD,EAAA,MAAM,UAAa,GAAA,aAAA,EAAA,CAAA;EAEnB,EAAA,uBACGA,yBAAA,CAAA,aAAA,CAAA,KAAA,EAAD,IACE,kBAAAA,yBAAA,CAAA,aAAA,CAAC,KAAD,EAAA,IAAA,EACG,SAAU,CAAA,UAAA,EAAW,IAAG,EAAA,UAAA,CAAW,IAEtC,CAAA,kBAAAA,yBAAA,CAAA,aAAA,CAAC,KAAD,EAAA,IAAA,EACG,SAAU,CAAA,aAAA,EAAc,IAAG,EAAA,UAAA,CAAW,OAEzC,CAAA,kBAAAA,yBAAA,CAAA,aAAA,CAAC,KAAD,EAAA,IAAA,EACG,SAAU,CAAA,QAAA,EAAS,IAAG,EAAA,UAAA,CAAW,QAEpC,CAAA,kBAAAA,yBAAA,CAAA,aAAA,CAACC,gBAAD,EAAA;EAAA,IACE,SAAS,YAAY;EACnB,MAAA,MAAM,MAAM,MAAM,WAAA,EAAA,CAAA;EAClB,MAAA,IAAI,QAAQ,KAAO,EAAA;EACjB,QAAAC,wBAAA,CAAkB,SAAU,CAAA,QAAA,CAAA,CAAA;EAAA,OAAA;EAAA,KAAA;EAAA,GAAA,EAI/B,SAAU,CAAA,YAAA,CAAA,CAAA,CAAA;EAAA,CAAA,CAAA,CAAA;EAKnB,eAAA,CAAgB,WAAc,GAAA,iBAAA;;ECtB9B,MAAM,WAAc,GAAA,kBAAA,CAAA;EAEpB,OAAA,CAAQ,IAAI,CAAU,OAAA,EAAA,WAAA,CAAA,UAAA,CAAA,CAAA,CAAA;AAEtBC,uBAAe,CAAA;EAAA,EACb,QAAU,EAAA,SAAA;EAAA,EACV,IAAM,EAAA,EAAA;EAAA,EACN,IAAM,EAAA,0CAAA;EAAA,EACN,OAAO,SAAU,CAAA,UAAA;EAAA,EACjB,MAAQ,EAAA,eAAA;EAAA,CAAA,CAAA,CAAA;AAGVC,2BAAmB,CAAA;EAAA,EACjB,QAAQ,MAAM;EACZ,IAAA,+DACGC,cAAD,EAAA;EAAA,MACE,SAAU,EAAA,yBAAA;EAAA,MACV,IAAK,EAAA,iBAAA;EAAA,MACL,MAAQ,EAAA,CAAA;EAAA,MACR,SAAS,MAAM;EACb,QAAiBP,uBAAA,CAAA,qBAAA,CAAA,CAAA;EAAA,OAAA;EAAA,KAAA,CAAA,CAAA;EAAA,GAAA;EAAA,CAAA,CAAA,CAAA;EAO3B,kBAAmB,CAAA,uBAAA,CAAA,CAAA;EAEnB,UAAA,CAAW,MAAM;EACf,EAAA,WAAA,EAAA,CAAA;EAAA,CACC,EAAA,GAAA,CAAA;;;;;;"}