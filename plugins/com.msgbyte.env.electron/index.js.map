{"version":3,"file":"index.js","sources":["../../../plugins/com.msgbyte.env.electron/src/translate.ts","../../../plugins/com.msgbyte.env.electron/src/utils.ts","../../../plugins/com.msgbyte.env.electron/src/checkUpdate.tsx","../../../plugins/com.msgbyte.env.electron/src/DeviceInfoPanel.tsx","../../../plugins/com.msgbyte.env.electron/src/ElectronWebview.tsx","../../../../../node_modules/.pnpm/rollup-plugin-styles@3.14.1_rollup@2.79.1/node_modules/rollup-plugin-styles/dist/runtime/inject-css.js","../../../plugins/com.msgbyte.env.electron/src/index.tsx"],"sourcesContent":["import { localTrans } from '@capital/common';\n\nexport const Translate = {\n  deviceInfo: localTrans({\n    'zh-CN': '设备信息',\n    'en-US': 'Device Info',\n  }),\n  clientName: localTrans({\n    'zh-CN': '客户端名称',\n    'en-US': 'Client Name',\n  }),\n  clientVersion: localTrans({\n    'zh-CN': '客户端版本号',\n    'en-US': 'Client Version',\n  }),\n  platform: localTrans({\n    'zh-CN': '平台',\n    'en-US': 'Platform',\n  }),\n  newVersionTip: localTrans({\n    'zh-CN': '新版本提示',\n    'en-US': 'New Version Upgrade Tip',\n  }),\n  newVersionDesc: localTrans({\n    'zh-CN': '发现有新的版本可以安装',\n    'en-US': 'A new version was found to be installed',\n  }),\n  upgradeNow: localTrans({\n    'zh-CN': '立即更新',\n    'en-US': 'Upgrade Now',\n  }),\n  checkVersion: localTrans({\n    'zh-CN': '检查更新',\n    'en-US': 'Check for updates',\n  }),\n  isLatest: localTrans({\n    'zh-CN': '已经是最新版',\n    'en-US': 'Already the latest version',\n  }),\n  nativeWebviewRender: localTrans({\n    'zh-CN': '启用原生浏览器内核渲染',\n    'en-US': 'Use Native Webview Render',\n  }),\n  nativeWebviewRenderDesc: localTrans({\n    'zh-CN': '解除默认网页访问限制，允许在Tailchat嵌入任意网站内容',\n    'en-US':\n      'Lift default web page access restrictions and allow any website content to be embedded in Tailchat',\n  }),\n  nativeWebviewRenderHideTip: localTrans({\n    'zh-CN': '组件被遮挡，暂时隐藏网页视图',\n    'en-US': 'The component is obscured, temporarily hiding the web view',\n  }),\n};\n","import { sharedEvent, postMessageEvent } from '@capital/common';\n\n/**\n * 转发事件\n */\nexport function forwardSharedEvent(\n  eventName: string,\n  processPayload?: (payload: any) => Promise<{ type: string; payload: any }>\n) {\n  sharedEvent.on(eventName as any, async (payload: any) => {\n    let type = eventName;\n    if (processPayload) {\n      const res = await processPayload(payload);\n      if (!res) {\n        // Skip if res is undefined\n        return;\n      }\n\n      payload = res.payload;\n      type = res.type;\n    }\n\n    postMessageEvent(type, payload);\n  });\n}\n\ninterface ElectronDeviceInfo {\n  name: string;\n  version: string;\n  platform: string;\n}\nexport function getDeviceInfo() {\n  const deviceInfo: ElectronDeviceInfo = {\n    name: '',\n    version: '0.0.0',\n    platform: 'windows',\n    ...((window as any).__electronDeviceInfo ?? {}),\n  };\n\n  return deviceInfo;\n}\n","import { Button, notification } from '@capital/component';\nimport React from 'react';\nimport { Translate } from './translate';\nimport { getDeviceInfo } from './utils';\n\nconst url = 'https://tailchat.msgbyte.com/downloads/client.json';\n\nexport async function checkUpdate(): Promise<boolean> {\n  const deviceInfo = getDeviceInfo();\n  const [semver, config] = await Promise.all([\n    import('semver'),\n    fetch(url).then((res) => res.json()),\n  ]);\n\n  const version = deviceInfo.version;\n  const platform = deviceInfo.platform;\n  const latestConfig = config?.[platform];\n  const latestVersion = latestConfig?.version;\n  const latestUrl = latestConfig?.url;\n\n  if (!latestVersion) {\n    console.warn('Not found latest version');\n    return true;\n  }\n  if (!latestUrl) {\n    console.warn('Not found latest url');\n    return true;\n  }\n\n  if (version === '0.0.0') {\n    console.warn('Current version not valid');\n    return true;\n  }\n\n  if (semver.gt(latestVersion, version)) {\n    // 有新版本\n    notification.info({\n      message: Translate.newVersionTip,\n      description: (\n        <div>\n          <div>{Translate.newVersionDesc}</div>\n          <div>\n            {version} -&gt; {latestVersion}\n          </div>\n        </div>\n      ),\n      btn: (\n        <Button\n          type=\"primary\"\n          onClick={() => {\n            window.open(latestUrl);\n          }}\n        >\n          {Translate.upgradeNow}\n        </Button>\n      ),\n      placement: 'topRight',\n      duration: 0,\n    });\n\n    return true;\n  }\n\n  return false;\n}\n","import { showSuccessToasts } from '@capital/common';\nimport { Button } from '@capital/component';\nimport React from 'react';\nimport { checkUpdate } from './checkUpdate';\nimport { Translate } from './translate';\nimport { getDeviceInfo } from './utils';\n\nexport const DeviceInfoPanel: React.FC = React.memo(() => {\n  const deviceInfo = getDeviceInfo();\n\n  return (\n    <div>\n      <div>\n        {Translate.clientName}: {deviceInfo.name}\n      </div>\n      <div>\n        {Translate.clientVersion}: {deviceInfo.version}\n      </div>\n      <div>\n        {Translate.platform}: {deviceInfo.platform}\n      </div>\n      <Button\n        onClick={async () => {\n          const res = await checkUpdate();\n          if (res === false) {\n            showSuccessToasts(Translate.isLatest);\n          }\n        }}\n      >\n        {Translate.checkVersion}\n      </Button>\n    </div>\n  );\n});\nDeviceInfoPanel.displayName = 'DeviceInfoPanel';\n","import React, { useEffect, useRef, useState } from 'react';\nimport { Translate } from './translate';\n\ninterface ElectronWebviewProps {\n  className?: string;\n  src: string;\n}\nexport const ElectronWebview: React.FC<ElectronWebviewProps> = React.memo(\n  (props) => {\n    const containerRef = useRef<HTMLDivElement>(null);\n    const [isVisiable, setIsVisiable] = useState(true);\n    const key = props.src;\n    const url = props.src;\n\n    useEffect(() => {\n      if (!containerRef.current) {\n        return;\n      }\n\n      const rect = containerRef.current.getBoundingClientRect();\n\n      (window as any).electron.ipcRenderer.sendMessage('$mount-webview', {\n        key,\n        url,\n        rect: {\n          x: rect.x,\n          y: rect.y,\n          width: rect.width,\n          height: rect.height,\n        },\n      });\n\n      return () => {\n        (window as any).electron.ipcRenderer.sendMessage('$unmount-webview', {\n          key,\n        });\n      };\n    }, [key, url]);\n\n    useEffect(() => {\n      if (!containerRef.current) {\n        return;\n      }\n\n      const intersectionObserver = new IntersectionObserver(\n        (entries) => {\n          entries.forEach((entry: any) => {\n            if (entry.isVisible === true) {\n              // 完全可见，显示\n              (window as any).electron.ipcRenderer.sendMessage(\n                '$show-webview',\n                {\n                  key: key,\n                }\n              );\n            } else {\n              (window as any).electron.ipcRenderer.sendMessage(\n                '$hide-webview',\n                {\n                  key: key,\n                }\n              );\n            }\n            setIsVisiable(entry.isVisible);\n          });\n        },\n        {\n          trackVisibility: true,\n          delay: 200,\n        } as any\n      );\n\n      const resizeObserver = new ResizeObserver((entries) => {\n        entries.forEach((entry) => {\n          const { target } = entry;\n          if (!target.parentElement) {\n            return;\n          }\n\n          const rect = target.getBoundingClientRect();\n\n          (window as any).electron.ipcRenderer.sendMessage(\n            '$update-webview-rect',\n            {\n              key: key,\n              rect: {\n                x: rect.x,\n                y: rect.y,\n                width: rect.width,\n                height: rect.height,\n              },\n            }\n          );\n        });\n      });\n\n      intersectionObserver.observe(containerRef.current);\n      resizeObserver.observe(containerRef.current);\n\n      return () => {\n        if (containerRef.current) {\n          intersectionObserver.unobserve(containerRef.current);\n          resizeObserver.unobserve(containerRef.current);\n        }\n      };\n    }, [key]);\n\n    return (\n      <div\n        ref={containerRef}\n        className={props.className}\n        style={{ width: '100%', height: '100%' }}\n      >\n        {isVisiable === false && (\n          <span>{Translate.nativeWebviewRenderHideTip}</span>\n        )}\n      </div>\n    );\n  }\n);\nElectronWebview.displayName = 'ElectronWebview';\n","var e=[],t=[];function n(n,r){if(n&&\"undefined\"!=typeof document){var a,s=!0===r.prepend?\"prepend\":\"append\",d=!0===r.singleTag,i=\"string\"==typeof r.container?document.querySelector(r.container):document.getElementsByTagName(\"head\")[0];if(d){var u=e.indexOf(i);-1===u&&(u=e.push(i)-1,t[u]={}),a=t[u]&&t[u][s]?t[u][s]:t[u][s]=c()}else a=c();65279===n.charCodeAt(0)&&(n=n.substring(1)),a.styleSheet?a.styleSheet.cssText+=n:a.appendChild(document.createTextNode(n))}function c(){var e=document.createElement(\"style\");if(e.setAttribute(\"type\",\"text/css\"),r.attributes)for(var t=Object.keys(r.attributes),n=0;n<t.length;n++)e.setAttribute(t[n],r.attributes[t[n]]);var a=\"prepend\"===s?\"afterbegin\":\"beforeend\";return i.insertAdjacentElement(a,e),e}}export default n;\n","import {\n  regCustomPanel,\n  regChatInputButton,\n  postMessageEvent,\n  sharedEvent,\n  regPluginSettings,\n  getCachedUserSettings,\n} from '@capital/common';\nimport { Icon } from '@capital/component';\nimport React from 'react';\nimport { DeviceInfoPanel } from './DeviceInfoPanel';\nimport { Translate } from './translate';\nimport { forwardSharedEvent } from './utils';\nimport { checkUpdate } from './checkUpdate';\nimport { setWebviewKernel, resetWebviewKernel } from '@capital/common';\nimport { ElectronWebview } from './ElectronWebview';\nimport './overwrite.css';\n\nconst PLUGIN_NAME = 'Electron Support';\nconst WEBVIEW_CONFIG = 'electron:nativeWebviewRender';\n\nconsole.log(`Plugin ${PLUGIN_NAME} is loaded`);\n\nregCustomPanel({\n  position: 'setting',\n  icon: '',\n  name: 'com.msgbyte.env.electron/deviceInfoPanel',\n  label: Translate.deviceInfo,\n  render: DeviceInfoPanel,\n});\n\nregChatInputButton({\n  render: () => {\n    return (\n      <Icon\n        className=\"text-2xl cursor-pointer\"\n        icon=\"mdi:content-cut\"\n        rotate={3}\n        onClick={() => {\n          postMessageEvent('callScreenshotsTool');\n        }}\n      />\n    );\n  },\n});\n\nregPluginSettings({\n  position: 'system',\n  type: 'boolean',\n  name: WEBVIEW_CONFIG,\n  label: Translate.nativeWebviewRender,\n  desc: Translate.nativeWebviewRenderDesc,\n});\n\nforwardSharedEvent('receiveUnmutedMessage');\n\nsetTimeout(() => {\n  checkUpdate();\n}, 1000);\n\nlet changedWithElectron = false;\n\nconst checkSettingConfig = (settings: Record<string, any>) => {\n  if (settings[WEBVIEW_CONFIG] === true) {\n    setWebviewKernel(() => ElectronWebview);\n    changedWithElectron = true;\n  } else if (changedWithElectron === true) {\n    // 如果关闭了配置且仅当之前用electron设置了webview，则重置\n    resetWebviewKernel();\n  }\n};\n\nsharedEvent.on('loginSuccess', () => {\n  getCachedUserSettings().then((settings) => {\n    checkSettingConfig(settings);\n  });\n});\n\nsharedEvent.on('userSettingsUpdate', (settings) => {\n  checkSettingConfig(settings);\n});\n\nnavigator.mediaDevices.getDisplayMedia = async (\n  options: DisplayMediaStreamOptions\n) => {\n  const source = await (\n    window as any\n  ).electron.ipcRenderer.getDesktopCapturerSource();\n\n  const stream = await window.navigator.mediaDevices.getUserMedia({\n    // audio: options.audio,\n    video: {\n      mandatory: {\n        chromeMediaSource: 'desktop',\n        chromeMediaSourceId: source.id,\n      },\n    } as any,\n  });\n\n  return stream;\n};\n"],"names":["localTrans","sharedEvent","postMessageEvent","notification","React","Button","showSuccessToasts","useRef","useState","useEffect","regCustomPanel","regChatInputButton","Icon","regPluginSettings","setWebviewKernel","resetWebviewKernel","getCachedUserSettings"],"mappings":"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"}