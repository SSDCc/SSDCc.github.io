{"version":3,"file":"index.js","sources":["../../../plugins/com.msgbyte.env.rn/src/translate.ts","../../../plugins/com.msgbyte.env.rn/src/DeviceInfoPanel.tsx","../../../plugins/com.msgbyte.env.rn/src/utils.ts","../../../plugins/com.msgbyte.env.rn/src/index.tsx"],"sourcesContent":["import { localTrans } from '@capital/common';\n\nexport const Translate = {\n  from: localTrans({\n    'zh-CN': '来自',\n    'en-US': 'From',\n  }),\n  dm: localTrans({\n    'zh-CN': '私信',\n    'en-US': 'DM',\n  }),\n  deviceInfo: localTrans({\n    'zh-CN': '设备信息',\n    'en-US': 'Device Info',\n  }),\n  clientVersion: localTrans({\n    'zh-CN': '客户端版本号',\n    'en-US': 'Client Version',\n  }),\n};\n","import React from 'react';\nimport { Translate } from './translate';\n\ninterface WindowRnDeviceInfo {\n  version: string;\n  readableVersion: string;\n}\n\nexport const DeviceInfoPanel: React.FC = React.memo(() => {\n  const deviceInfo: WindowRnDeviceInfo = (window as any).__rnDeviceInfo ?? {};\n  return (\n    <div>\n      <div>\n        {Translate.clientVersion}: {deviceInfo.version}(\n        {deviceInfo.readableVersion})\n      </div>\n    </div>\n  );\n});\nDeviceInfoPanel.displayName = 'DeviceInfoPanel';\n","import { sharedEvent } from '@capital/common';\n\n/**\n * 转发事件\n */\nexport function forwardSharedEvent(\n  eventName: string,\n  processPayload?: (payload: any) => Promise<{ type: string; payload: any }>\n) {\n  if (!(window as any).ReactNativeWebView) {\n    return;\n  }\n\n  sharedEvent.on(eventName, async (payload: any) => {\n    let type = eventName;\n    if (processPayload) {\n      const res = await processPayload(payload);\n      if (!res) {\n        // Skip if res is undefined\n        return;\n      }\n\n      payload = res.payload;\n      type = res.type;\n    }\n\n    (window as any).ReactNativeWebView.postMessage(\n      JSON.stringify({\n        _isTailchat: true,\n        type,\n        payload,\n      })\n    );\n  });\n}\n","import {\n  getGlobalState,\n  getCachedUserInfo,\n  getCachedBaseGroupInfo,\n  getMessageTextDecorators,\n  getServiceUrl,\n  regCustomPanel,\n} from '@capital/common';\nimport { DeviceInfoPanel } from './DeviceInfoPanel';\nimport { Translate } from './translate';\nimport { forwardSharedEvent } from './utils';\n\nconst PLUGIN_NAME = 'ReactNative Support';\n\nconsole.log(`Plugin ${PLUGIN_NAME} is loaded`);\n\nregCustomPanel({\n  position: 'setting',\n  icon: '',\n  name: 'com.msgbyte.env.rn/deviceInfoPanel',\n  label: Translate.deviceInfo,\n  render: DeviceInfoPanel,\n});\n\nforwardSharedEvent('loadColorScheme');\nforwardSharedEvent('loginSuccess', async (payload) => {\n  let token = window.localStorage.getItem('jsonwebtoken');\n  try {\n    token = JSON.parse(token).rawData;\n  } catch (e) {}\n\n  if (typeof token !== 'string') {\n    console.error('Cannot get token:', token);\n    return;\n  }\n\n  return {\n    type: 'bindWebsocket',\n    payload: {\n      url: getServiceUrl(),\n      token,\n      userInfo: payload,\n    },\n  };\n});\nforwardSharedEvent('receiveUnmutedMessage', async (payload) => {\n  const message = payload;\n  const currentUserId = getGlobalState()?.user.info._id;\n\n  if (currentUserId === message.author) {\n    // 忽略本人消息\n    return;\n  }\n\n  const [userInfo, scopeName] = await Promise.all([\n    getCachedUserInfo(message.author),\n    message.groupId\n      ? getCachedBaseGroupInfo(message.groupId).then((d) => d.name)\n      : Promise.resolve(Translate.dm),\n  ]);\n  const nickname = userInfo?.nickname ?? '';\n  const icon = userInfo?.avatar ?? undefined;\n  const content = message.content;\n\n  const title = `${Translate.from} [${scopeName}] ${nickname}`;\n  const body = getMessageTextDecorators().serialize(content);\n\n  return {\n    type: 'showNotification',\n    payload: {\n      title,\n      body,\n      icon,\n    },\n  };\n});\n"],"names":["localTrans","React","sharedEvent","regCustomPanel","getServiceUrl","getGlobalState","getCachedUserInfo","getCachedBaseGroupInfo","getMessageTextDecorators"],"mappings":"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"}