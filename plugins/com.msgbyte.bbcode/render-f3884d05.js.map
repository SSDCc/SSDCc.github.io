{"version":3,"file":"render-f3884d05.js","sources":["../../../../../node_modules/.pnpm/ip-regex@4.3.0/node_modules/ip-regex/index.js","../../../../../node_modules/.pnpm/url-regex@5.0.0/node_modules/url-regex/index.js","../../../plugins/com.msgbyte.bbcode/src/bbcode/index.tsx","../../../plugins/com.msgbyte.bbcode/src/tags/CodeTag.tsx","../../../plugins/com.msgbyte.bbcode/src/tags/ImgTag.tsx","../../../plugins/com.msgbyte.bbcode/src/tags/MentionTag.tsx","../../../plugins/com.msgbyte.bbcode/src/tags/PlainText.tsx","../../../plugins/com.msgbyte.bbcode/src/tags/UrlTag.tsx","../../../plugins/com.msgbyte.bbcode/src/tags/EmojiTag.tsx","../../../plugins/com.msgbyte.bbcode/src/tags/MarkdownTag.tsx","../../../plugins/com.msgbyte.bbcode/src/tags/BoldTag.tsx","../../../plugins/com.msgbyte.bbcode/src/tags/ItalicTag.tsx","../../../plugins/com.msgbyte.bbcode/src/tags/UnderlinedTag.tsx","../../../plugins/com.msgbyte.bbcode/src/tags/DeleteTag.tsx","../../../plugins/com.msgbyte.bbcode/src/tags/CardTag.tsx","../../../../../node_modules/.pnpm/rollup-plugin-styles@3.14.1_rollup@2.79.1/node_modules/rollup-plugin-styles/dist/runtime/inject-css.js","../../../plugins/com.msgbyte.bbcode/src/tags/__all__.ts"],"sourcesContent":["'use strict';\n\nconst word = '[a-fA-F\\\\d:]';\nconst b = options => options && options.includeBoundaries ?\n\t`(?:(?<=\\\\s|^)(?=${word})|(?<=${word})(?=\\\\s|$))` :\n\t'';\n\nconst v4 = '(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)(?:\\\\.(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)){3}';\n\nconst v6seg = '[a-fA-F\\\\d]{1,4}';\nconst v6 = `\n(?:\n(?:${v6seg}:){7}(?:${v6seg}|:)|                                    // 1:2:3:4:5:6:7::  1:2:3:4:5:6:7:8\n(?:${v6seg}:){6}(?:${v4}|:${v6seg}|:)|                             // 1:2:3:4:5:6::    1:2:3:4:5:6::8   1:2:3:4:5:6::8  1:2:3:4:5:6::1.2.3.4\n(?:${v6seg}:){5}(?::${v4}|(?::${v6seg}){1,2}|:)|                   // 1:2:3:4:5::      1:2:3:4:5::7:8   1:2:3:4:5::8    1:2:3:4:5::7:1.2.3.4\n(?:${v6seg}:){4}(?:(?::${v6seg}){0,1}:${v4}|(?::${v6seg}){1,3}|:)| // 1:2:3:4::        1:2:3:4::6:7:8   1:2:3:4::8      1:2:3:4::6:7:1.2.3.4\n(?:${v6seg}:){3}(?:(?::${v6seg}){0,2}:${v4}|(?::${v6seg}){1,4}|:)| // 1:2:3::          1:2:3::5:6:7:8   1:2:3::8        1:2:3::5:6:7:1.2.3.4\n(?:${v6seg}:){2}(?:(?::${v6seg}){0,3}:${v4}|(?::${v6seg}){1,5}|:)| // 1:2::            1:2::4:5:6:7:8   1:2::8          1:2::4:5:6:7:1.2.3.4\n(?:${v6seg}:){1}(?:(?::${v6seg}){0,4}:${v4}|(?::${v6seg}){1,6}|:)| // 1::              1::3:4:5:6:7:8   1::8            1::3:4:5:6:7:1.2.3.4\n(?::(?:(?::${v6seg}){0,5}:${v4}|(?::${v6seg}){1,7}|:))             // ::2:3:4:5:6:7:8  ::2:3:4:5:6:7:8  ::8             ::1.2.3.4\n)(?:%[0-9a-zA-Z]{1,})?                                             // %eth0            %1\n`.replace(/\\s*\\/\\/.*$/gm, '').replace(/\\n/g, '').trim();\n\n// Pre-compile only the exact regexes because adding a global flag make regexes stateful\nconst v46Exact = new RegExp(`(?:^${v4}$)|(?:^${v6}$)`);\nconst v4exact = new RegExp(`^${v4}$`);\nconst v6exact = new RegExp(`^${v6}$`);\n\nconst ip = options => options && options.exact ?\n\tv46Exact :\n\tnew RegExp(`(?:${b(options)}${v4}${b(options)})|(?:${b(options)}${v6}${b(options)})`, 'g');\n\nip.v4 = options => options && options.exact ? v4exact : new RegExp(`${b(options)}${v4}${b(options)}`, 'g');\nip.v6 = options => options && options.exact ? v6exact : new RegExp(`${b(options)}${v6}${b(options)}`, 'g');\n\nmodule.exports = ip;\n","'use strict';\nconst ipRegex = require('ip-regex');\nconst tlds = require('tlds');\n\nmodule.exports = options => {\n\toptions = {\n\t\tstrict: true,\n\t\t...options\n\t};\n\n\tconst protocol = `(?:(?:[a-z]+:)?//)${options.strict ? '' : '?'}`;\n\tconst auth = '(?:\\\\S+(?::\\\\S*)?@)?';\n\tconst ip = ipRegex.v4().source;\n\tconst host = '(?:(?:[a-z\\\\u00a1-\\\\uffff0-9][-_]*)*[a-z\\\\u00a1-\\\\uffff0-9]+)';\n\tconst domain = '(?:\\\\.(?:[a-z\\\\u00a1-\\\\uffff0-9]-*)*[a-z\\\\u00a1-\\\\uffff0-9]+)*';\n\tconst tld = `(?:\\\\.${options.strict ? '(?:[a-z\\\\u00a1-\\\\uffff]{2,})' : `(?:${tlds.sort((a, b) => b.length - a.length).join('|')})`})\\\\.?`;\n\tconst port = '(?::\\\\d{2,5})?';\n\tconst path = '(?:[/?#][^\\\\s\"]*)?';\n\tconst regex = `(?:${protocol}|www\\\\.)${auth}(?:localhost|${ip}|${host}${domain}${tld})${port}${path}`;\n\n\treturn options.exact ? new RegExp(`(?:^${regex}$)`, 'i') : new RegExp(regex, 'ig');\n};\n","import React, { Fragment } from 'react';\nimport bbcodeParser from './parser';\nimport urlRegex from 'url-regex';\n\n/**\n * 客户端预处理文本\n * @param plainText 服务端文本\n */\nexport function preProcessLinkText(plainText: string): string {\n  const text = plainText.replace(\n    urlRegex({ exact: false, strict: true }),\n    '[url]$&[/url]'\n  ); // 将聊天记录中的url提取成bbcode 需要过滤掉被bbcode包住的部分\n\n  return text;\n}\n\n// 处理所有的预处理文本\nexport function preProcessText(plainText: string): string {\n  return bbcodeParser.preProcessText(plainText, preProcessLinkText);\n}\n\ninterface BBCodeProps {\n  plainText: string;\n}\nexport const BBCode: React.FC<BBCodeProps> = React.memo(({ plainText }) => {\n  const bbcodeComponent = bbcodeParser.render(preProcessText(plainText ?? ''));\n\n  return <Fragment>{bbcodeComponent}</Fragment>;\n});\nBBCode.displayName = 'BBCode';\n","import { Loadable } from '@capital/common';\nimport React from 'react';\nimport type { TagProps } from '../bbcode/type';\n\nconst Highlight = Loadable(() => import('../components/Highlight'));\n\nexport const CodeTag: React.FC<TagProps> = React.memo((props) => {\n  const { node } = props;\n  const text = node.content.join('');\n  const language = node.attrs.language ?? 'bash';\n\n  return <Highlight language={language} code={text} />;\n});\nCodeTag.displayName = 'CodeTag';\n","import React from 'react';\nimport { Image } from '@capital/component';\nimport type { TagProps } from '../bbcode/type';\n\nconst MAX_HEIGHT = 320;\nconst MAX_WIDTH = 320;\n\nconst imageStyle: React.CSSProperties = {\n  maxHeight: MAX_HEIGHT,\n  maxWidth: MAX_WIDTH,\n  width: 'auto',\n};\n\nfunction parseImageAttr(attr: { height: string; width: string }): {\n  height?: number;\n  width?: number;\n} {\n  const height = Number(attr.height);\n  const width = Number(attr.width);\n\n  if (!(height > 0 && width > 0)) {\n    // 确保宽高为数字且均大于0\n    return {};\n  }\n\n  if (height <= MAX_HEIGHT && width <= MAX_WIDTH) {\n    return {\n      height,\n      width,\n    };\n  }\n\n  const ratio = Math.max(height / MAX_HEIGHT, width / MAX_WIDTH);\n\n  return {\n    height: height / ratio,\n    width: width / ratio,\n  };\n}\n\nexport const ImgTag: React.FC<TagProps> = React.memo((props) => {\n  const { node } = props;\n  const text = node.content.join('');\n  const url = node.attrs.url ?? text;\n\n  return (\n    <Image\n      style={{\n        ...imageStyle,\n        ...parseImageAttr(node.attrs as any),\n      }}\n      preview={true}\n      src={url}\n    />\n  );\n});\nImgTag.displayName = 'ImgTag';\n","import { UserName } from '@capital/component';\nimport React from 'react';\nimport type { TagProps } from '../bbcode/type';\n\nexport const MentionTag: React.FC<TagProps> = React.memo((props) => {\n  const { node } = props;\n  const fallbackName = node.content.join('');\n  const userId = node.attrs.at;\n\n  return (\n    <span className=\"plugin-bbcode-mention-tag\" data-userid={userId}>\n      @{<UserName userId={userId} fallbackName={fallbackName} />}\n    </span>\n  );\n});\nMentionTag.displayName = 'MentionTag';\n","import React, { PropsWithChildren } from 'react';\nimport type { TagProps } from '../bbcode/type';\n\nexport const PlainText: React.FC<PropsWithChildren<TagProps>> = React.memo(\n  (props) => (\n    <pre style={{ display: 'inline', whiteSpace: 'break-spaces' }}>\n      {props.children}\n    </pre>\n  )\n);\nPlainText.displayName = 'PlainText';\n","import { Link } from '@capital/component';\nimport React from 'react';\nimport styled from 'styled-components';\nimport type { TagProps } from '../bbcode/type';\n\nconst UnderlineSpan = styled.span`\n  text-decoration: underline;\n  text-decoration-style: dotted;\n`;\n\nexport const UrlTag: React.FC<TagProps> = React.memo((props) => {\n  const { node } = props;\n  const text = node.content.join('');\n  const url = node.attrs.url ?? text;\n\n  if (url.startsWith('/')) {\n    // 内部地址，使用 react-router 进行导航\n    return (\n      <Link to={url}>\n        <UnderlineSpan>{text}</UnderlineSpan>\n      </Link>\n    );\n  }\n\n  if (url.startsWith(window.location.origin)) {\n    // 内部地址，使用 react-router 进行导航\n    return (\n      <Link to={url.replace(window.location.origin, '')}>\n        <UnderlineSpan>{text}</UnderlineSpan>\n      </Link>\n    );\n  }\n\n  return (\n    <a href={url} title={text} target=\"_blank\" rel=\"noopener noreferrer\">\n      <UnderlineSpan>{text}</UnderlineSpan>\n    </a>\n  );\n});\nUrlTag.displayName = 'UrlTag';\n","import { Emoji } from '@capital/component';\nimport React from 'react';\nimport type { TagProps } from '../bbcode/type';\n\nexport const EmojiTag: React.FC<TagProps> = React.memo((props) => {\n  const { node } = props;\n  const code = node.content.join('');\n\n  return <Emoji emoji={code} />;\n});\nEmojiTag.displayName = 'EmojiTag';\n","import React from 'react';\nimport { Markdown } from '@capital/component';\nimport type { TagProps } from '../bbcode/type';\n\nexport const MarkdownTag: React.FC<TagProps> = React.memo((props) => {\n  const { node } = props;\n  const text = node.content.join('');\n\n  return <Markdown raw={text} />;\n});\nMarkdownTag.displayName = 'MarkdownTag';\n","import React from 'react';\nimport type { TagProps } from '../bbcode/type';\n\nexport const BoldTag: React.FC<TagProps> = React.memo((props) => {\n  const { node } = props;\n  const text = node.content.join('');\n\n  return <b>{text}</b>;\n});\nBoldTag.displayName = 'BoldTag';\n","import React from 'react';\nimport type { TagProps } from '../bbcode/type';\n\nexport const ItalicTag: React.FC<TagProps> = React.memo((props) => {\n  const { node } = props;\n  const text = node.content.join('');\n\n  return <i>{text}</i>;\n});\nItalicTag.displayName = 'ItalicTag';\n","import React from 'react';\nimport type { TagProps } from '../bbcode/type';\n\nexport const UnderlinedTag: React.FC<TagProps> = React.memo((props) => {\n  const { node } = props;\n  const text = node.content.join('');\n\n  return <ins>{text}</ins>;\n});\nUnderlinedTag.displayName = 'UnderlinedTag';\n","import React from 'react';\nimport type { TagProps } from '../bbcode/type';\n\nexport const DeleteTag: React.FC<TagProps> = React.memo((props) => {\n  const { node } = props;\n  const text = node.content.join('');\n\n  return <del>{text}</del>;\n});\nDeleteTag.displayName = 'DeleteTag';\n","import { Card } from '@capital/component';\nimport React from 'react';\nimport type { TagProps } from '../bbcode/type';\n\nexport const CardTag: React.FC<TagProps> = React.memo((props) => {\n  const { node } = props;\n  const label = node.content.join('');\n  const attrs = node.attrs ?? {};\n\n  const payload: any = {\n    label,\n    ...attrs,\n  };\n\n  return <Card type={payload.type} payload={payload} />;\n});\nCardTag.displayName = 'CardTag';\n","var e=[],t=[];function n(n,r){if(n&&\"undefined\"!=typeof document){var a,s=!0===r.prepend?\"prepend\":\"append\",d=!0===r.singleTag,i=\"string\"==typeof r.container?document.querySelector(r.container):document.getElementsByTagName(\"head\")[0];if(d){var u=e.indexOf(i);-1===u&&(u=e.push(i)-1,t[u]={}),a=t[u]&&t[u][s]?t[u][s]:t[u][s]=c()}else a=c();65279===n.charCodeAt(0)&&(n=n.substring(1)),a.styleSheet?a.styleSheet.cssText+=n:a.appendChild(document.createTextNode(n))}function c(){var e=document.createElement(\"style\");if(e.setAttribute(\"type\",\"text/css\"),r.attributes)for(var t=Object.keys(r.attributes),n=0;n<t.length;n++)e.setAttribute(t[n],r.attributes[t[n]]);var a=\"prepend\"===s?\"afterbegin\":\"beforeend\";return i.insertAdjacentElement(a,e),e}}export default n;\n","import { registerBBCodeTag } from '../bbcode/parser';\nimport { CodeTag } from './CodeTag';\nimport { ImgTag } from './ImgTag';\nimport { MentionTag } from './MentionTag';\nimport { PlainText } from './PlainText';\nimport { UrlTag } from './UrlTag';\nimport { EmojiTag } from './EmojiTag';\nimport { MarkdownTag } from './MarkdownTag';\nimport { BoldTag } from './BoldTag';\nimport { ItalicTag } from './ItalicTag';\nimport { UnderlinedTag } from './UnderlinedTag';\nimport { DeleteTag } from './DeleteTag';\nimport { CardTag } from './CardTag';\n\nimport './styles.less';\n\n/**\n * Reference: https://en.wikipedia.org/wiki/BBCode\n */\nregisterBBCodeTag('_text', PlainText);\nregisterBBCodeTag('b', BoldTag);\nregisterBBCodeTag('i', ItalicTag);\nregisterBBCodeTag('u', UnderlinedTag);\nregisterBBCodeTag('s', DeleteTag);\nregisterBBCodeTag('url', UrlTag);\nregisterBBCodeTag('img', ImgTag);\nregisterBBCodeTag('code', CodeTag);\nregisterBBCodeTag('at', MentionTag);\nregisterBBCodeTag('emoji', EmojiTag);\nregisterBBCodeTag('markdown', MarkdownTag);\nregisterBBCodeTag('md', MarkdownTag); // alias\nregisterBBCodeTag('card', CardTag);\n"],"names":["ipRegex","require$$0","bbcodeParser","React","Fragment","Loadable","Image","__spreadValues","UserName","styled","Link","Emoji","Markdown","Card","registerBBCodeTag"],"mappings":";;;;;;;CAEA,MAAM,IAAI,GAAG,cAAc,CAAC;CAC5B,MAAM,CAAC,GAAG,OAAO,IAAI,OAAO,IAAI,OAAO,CAAC,iBAAiB;CACzD,CAAC,CAAC,gBAAgB,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,WAAW,CAAC;CAClD,CAAC,EAAE,CAAC;AACJ;CACA,MAAM,EAAE,GAAG,gGAAgG,CAAC;AAC5G;CACA,MAAM,KAAK,GAAG,kBAAkB,CAAC;CACjC,MAAM,EAAE,GAAG,CAAC;AACZ;AACA,GAAG,EAAE,KAAK,CAAC,QAAQ,EAAE,KAAK,CAAC;AAC3B,GAAG,EAAE,KAAK,CAAC,QAAQ,EAAE,EAAE,CAAC,EAAE,EAAE,KAAK,CAAC;AAClC,GAAG,EAAE,KAAK,CAAC,SAAS,EAAE,EAAE,CAAC,KAAK,EAAE,KAAK,CAAC;AACtC,GAAG,EAAE,KAAK,CAAC,YAAY,EAAE,KAAK,CAAC,OAAO,EAAE,EAAE,CAAC,KAAK,EAAE,KAAK,CAAC;AACxD,GAAG,EAAE,KAAK,CAAC,YAAY,EAAE,KAAK,CAAC,OAAO,EAAE,EAAE,CAAC,KAAK,EAAE,KAAK,CAAC;AACxD,GAAG,EAAE,KAAK,CAAC,YAAY,EAAE,KAAK,CAAC,OAAO,EAAE,EAAE,CAAC,KAAK,EAAE,KAAK,CAAC;AACxD,GAAG,EAAE,KAAK,CAAC,YAAY,EAAE,KAAK,CAAC,OAAO,EAAE,EAAE,CAAC,KAAK,EAAE,KAAK,CAAC;AACxD,WAAW,EAAE,KAAK,CAAC,OAAO,EAAE,EAAE,CAAC,KAAK,EAAE,KAAK,CAAC;AAC5C;AACA,CAAC,CAAC,OAAO,CAAC,cAAc,EAAE,EAAE,CAAC,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC;AACxD;CACA;CACA,MAAM,QAAQ,GAAG,IAAI,MAAM,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,OAAO,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;CACvD,MAAM,OAAO,GAAG,IAAI,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;CACtC,MAAM,OAAO,GAAG,IAAI,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;AACtC;CACA,MAAM,EAAE,GAAG,OAAO,IAAI,OAAO,IAAI,OAAO,CAAC,KAAK;CAC9C,CAAC,QAAQ;CACT,CAAC,IAAI,MAAM,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;AAC5F;CACA,EAAE,CAAC,EAAE,GAAG,OAAO,IAAI,OAAO,IAAI,OAAO,CAAC,KAAK,GAAG,OAAO,GAAG,IAAI,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;CAC3G,EAAE,CAAC,EAAE,GAAG,OAAO,IAAI,OAAO,IAAI,OAAO,CAAC,KAAK,GAAG,OAAO,GAAG,IAAI,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;AAC3G;CACA,IAAAA,SAAc,GAAG,EAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CClCnB,MAAM,OAAO,GAAGC,SAAmB,CAAC;CACpC,MAAM,IAAI,GAAG,UAAe,CAAC;AAC7B;KACA,QAAc,GAAG,OAAO,IAAI;CAC5B,CAAC,OAAO,GAAG;CACX,EAAE,MAAM,EAAE,IAAI;CACd,EAAE,GAAG,OAAO;CACZ,EAAE,CAAC;AACH;CACA,CAAC,MAAM,QAAQ,GAAG,CAAC,kBAAkB,EAAE,OAAO,CAAC,MAAM,GAAG,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC;CACnE,CAAC,MAAM,IAAI,GAAG,sBAAsB,CAAC;CACrC,CAAC,MAAM,EAAE,GAAG,OAAO,CAAC,EAAE,EAAE,CAAC,MAAM,CAAC;CAChC,CAAC,MAAM,IAAI,GAAG,+DAA+D,CAAC;CAC9E,CAAC,MAAM,MAAM,GAAG,gEAAgE,CAAC;CACjF,CAAC,MAAM,GAAG,GAAG,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,GAAG,8BAA8B,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;CAC3I,CAAC,MAAM,IAAI,GAAG,gBAAgB,CAAC;CAC/B,CAAC,MAAM,IAAI,GAAG,oBAAoB,CAAC;CACnC,CAAC,MAAM,KAAK,GAAG,CAAC,GAAG,EAAE,QAAQ,CAAC,QAAQ,EAAE,IAAI,CAAC,aAAa,EAAE,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,MAAM,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;AACvG;CACA,CAAC,OAAO,OAAO,CAAC,KAAK,GAAG,IAAI,MAAM,CAAC,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC,GAAG,IAAI,MAAM,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;CACpF,CAAC;;CCbM,SAAA,kBAAA,CAA4B,SAA2B,EAAA;CAC5D,EAAM,MAAA,IAAA,GAAO,UAAU,OACrB,CAAA,QAAA,CAAS,EAAE,KAAO,EAAA,KAAA,EAAO,QAAQ,IACjC,EAAA,CAAA,EAAA,eAAA,CAAA,CAAA;CAGF,EAAO,OAAA,IAAA,CAAA;CAAA,CAAA;CAIF,SAAA,cAAA,CAAwB,SAA2B,EAAA;CACxD,EAAO,OAAAC,mBAAA,CAAa,eAAe,SAAW,EAAA,kBAAA,CAAA,CAAA;CAAA,CAAA;CAMzC,MAAM,MAAgC,GAAAC,yBAAA,CAAM,IAAK,CAAA,CAAC,EAAE,SAAgB,EAAA,KAAA;CACzE,EAAA,MAAM,eAAkB,GAAAD,mBAAA,CAAa,MAAO,CAAA,cAAA,CAAe,SAAa,IAAA,IAAA,GAAA,SAAA,GAAA,EAAA,CAAA,CAAA,CAAA;CAExE,EAAO,uBAAAC,yBAAA,CAAA,aAAA,CAACC,gBAAD,IAAW,EAAA,eAAA,CAAA,CAAA;CAAA,CAAA,CAAA,CAAA;CAEpB,MAAA,CAAO,WAAc,GAAA,QAAA;;CC1BrB,MAAM,SAAA,GAAYC,eAAS,CAAA,MAAM,kDAAO,sBAAA,uBAAA,CAAA,CAAA;CAEjC,MAAM,OAA8B,GAAAF,yBAAA,CAAM,IAAK,CAAA,CAAC,KAAU,KAAA;CANjE,EAAA,IAAA,EAAA,CAAA;CAOE,EAAA,MAAM,EAAE,IAAS,EAAA,GAAA,KAAA,CAAA;CACjB,EAAM,MAAA,IAAA,GAAO,IAAK,CAAA,OAAA,CAAQ,IAAK,CAAA,EAAA,CAAA,CAAA;CAC/B,EAAA,MAAM,QAAW,GAAA,CAAA,EAAA,GAAA,IAAA,CAAK,KAAM,CAAA,QAAA,KAAX,IAAuB,GAAA,EAAA,GAAA,MAAA,CAAA;CAExC,EAAA,+DAAQ,SAAD,EAAA;CAAA,IAAW,QAAA;CAAA,IAAoB,IAAM,EAAA,IAAA;CAAA,GAAA,CAAA,CAAA;CAAA,CAAA,CAAA,CAAA;CAE9C,OAAA,CAAQ,WAAc,GAAA,SAAA;;;;;;;;;;;;;;;;;;CCTtB,MAAM,UAAa,GAAA,GAAA,CAAA;CACnB,MAAM,SAAY,GAAA,GAAA,CAAA;CAElB,MAAM,UAAkC,GAAA;CAAA,EACtC,SAAW,EAAA,UAAA;CAAA,EACX,QAAU,EAAA,SAAA;CAAA,EACV,KAAO,EAAA,MAAA;CAAA,CAAA,CAAA;CAGT,SAAA,cAAA,CAAwB,IAGtB,EAAA;CACA,EAAM,MAAA,MAAA,GAAS,OAAO,IAAK,CAAA,MAAA,CAAA,CAAA;CAC3B,EAAM,MAAA,KAAA,GAAQ,OAAO,IAAK,CAAA,KAAA,CAAA,CAAA;CAE1B,EAAA,IAAI,EAAE,MAAA,GAAS,CAAK,IAAA,KAAA,GAAQ,CAAI,CAAA,EAAA;CAE9B,IAAO,OAAA,EAAA,CAAA;CAAA,GAAA;CAGT,EAAI,IAAA,MAAA,IAAU,UAAc,IAAA,KAAA,IAAS,SAAW,EAAA;CAC9C,IAAO,OAAA;CAAA,MACL,MAAA;CAAA,MACA,KAAA;CAAA,KAAA,CAAA;CAAA,GAAA;CAIJ,EAAA,MAAM,KAAQ,GAAA,IAAA,CAAK,GAAI,CAAA,MAAA,GAAS,YAAY,KAAQ,GAAA,SAAA,CAAA,CAAA;CAEpD,EAAO,OAAA;CAAA,IACL,QAAQ,MAAS,GAAA,KAAA;CAAA,IACjB,OAAO,KAAQ,GAAA,KAAA;CAAA,GAAA,CAAA;CAAA,CAAA;CAIZ,MAAM,MAA6B,GAAAA,yBAAA,CAAM,IAAK,CAAA,CAAC,KAAU,KAAA;CAxChE,EAAA,IAAA,EAAA,CAAA;CAyCE,EAAA,MAAM,EAAE,IAAS,EAAA,GAAA,KAAA,CAAA;CACjB,EAAM,MAAA,IAAA,GAAO,IAAK,CAAA,OAAA,CAAQ,IAAK,CAAA,EAAA,CAAA,CAAA;CAC/B,EAAA,MAAM,GAAM,GAAA,CAAA,EAAA,GAAA,IAAA,CAAK,KAAM,CAAA,GAAA,KAAX,IAAkB,GAAA,EAAA,GAAA,IAAA,CAAA;CAE9B,EAAA,+DACGG,eAAD,EAAA;CAAA,IACE,KAAO,EAAAC,gBAAA,CAAAA,gBAAA,CAAA,EAAA,EACF,UACA,CAAA,EAAA,cAAA,CAAe,IAAK,CAAA,KAAA,CAAA,CAAA;CAAA,IAEzB,OAAS,EAAA,IAAA;CAAA,IACT,GAAK,EAAA,GAAA;CAAA,GAAA,CAAA,CAAA;CAAA,CAAA,CAAA,CAAA;CAIX,MAAA,CAAO,WAAc,GAAA,QAAA;;CCpDd,MAAM,UAAiC,GAAAJ,yBAAA,CAAM,IAAK,CAAA,CAAC,KAAU,KAAA;CAClE,EAAA,MAAM,EAAE,IAAS,EAAA,GAAA,KAAA,CAAA;CACjB,EAAM,MAAA,YAAA,GAAe,IAAK,CAAA,OAAA,CAAQ,IAAK,CAAA,EAAA,CAAA,CAAA;CACvC,EAAM,MAAA,MAAA,GAAS,KAAK,KAAM,CAAA,EAAA,CAAA;CAE1B,EAAA,+DACG,MAAD,EAAA;CAAA,IAAM,SAAU,EAAA,2BAAA;CAAA,IAA4B,aAAa,EAAA,MAAA;CAAA,GAAQ,EAAA,GAAA,0DAC5DK,kBAAD,EAAA;CAAA,IAAU,MAAA;CAAA,IAAgB,YAAA;CAAA,GAAA,CAAA,CAAA,CAAA;CAAA,CAAA,CAAA,CAAA;CAIlC,UAAA,CAAW,WAAc,GAAA,YAAA;;CCZlB,MAAM,YAAmDL,yBAAM,CAAA,IAAA,CACpE,CAAC,KAAA,6DACE,KAAD,EAAA;CAAA,EAAK,KAAO,EAAA,EAAE,OAAS,EAAA,QAAA,EAAU,UAAY,EAAA,cAAA,EAAA;CAAA,CAAA,EAC1C,KAAM,CAAA,QAAA,CAAA,CAAA,CAAA;CAIb,SAAA,CAAU,WAAc,GAAA,WAAA;;CCLxB,MAAM,gBAAgBM,0BAAO,CAAA,IAAA,CAAA;AAAA;AAAA;AAAA,CAAA,CAAA;CAKtB,MAAM,MAA6B,GAAAN,yBAAA,CAAM,IAAK,CAAA,CAAC,KAAU,KAAA;CAVhE,EAAA,IAAA,EAAA,CAAA;CAWE,EAAA,MAAM,EAAE,IAAS,EAAA,GAAA,KAAA,CAAA;CACjB,EAAM,MAAA,IAAA,GAAO,IAAK,CAAA,OAAA,CAAQ,IAAK,CAAA,EAAA,CAAA,CAAA;CAC/B,EAAA,MAAM,GAAM,GAAA,CAAA,EAAA,GAAA,IAAA,CAAK,KAAM,CAAA,GAAA,KAAX,IAAkB,GAAA,EAAA,GAAA,IAAA,CAAA;CAE9B,EAAI,IAAA,GAAA,CAAI,WAAW,GAAM,CAAA,EAAA;CAEvB,IAAA,+DACGO,cAAD,EAAA;CAAA,MAAM,EAAI,EAAA,GAAA;CAAA,KACR,kBAAAP,yBAAA,CAAA,aAAA,CAAC,eAAD,IAAgB,EAAA,IAAA,CAAA,CAAA,CAAA;CAAA,GAAA;CAKtB,EAAA,IAAI,GAAI,CAAA,UAAA,CAAW,MAAO,CAAA,QAAA,CAAS,MAAS,CAAA,EAAA;CAE1C,IAAA,+DACGO,cAAD,EAAA;CAAA,MAAM,EAAI,EAAA,GAAA,CAAI,OAAQ,CAAA,MAAA,CAAO,SAAS,MAAQ,EAAA,EAAA,CAAA;CAAA,KAC5C,kBAAAP,yBAAA,CAAA,aAAA,CAAC,eAAD,IAAgB,EAAA,IAAA,CAAA,CAAA,CAAA;CAAA,GAAA;CAKtB,EAAA,+DACG,GAAD,EAAA;CAAA,IAAG,IAAM,EAAA,GAAA;CAAA,IAAK,KAAO,EAAA,IAAA;CAAA,IAAM,MAAO,EAAA,QAAA;CAAA,IAAS,GAAI,EAAA,qBAAA;CAAA,GAC7C,kBAAAA,yBAAA,CAAA,aAAA,CAAC,eAAD,IAAgB,EAAA,IAAA,CAAA,CAAA,CAAA;CAAA,CAAA,CAAA,CAAA;CAItB,MAAA,CAAO,WAAc,GAAA,QAAA;;CCnCd,MAAM,QAA+B,GAAAA,yBAAA,CAAM,IAAK,CAAA,CAAC,KAAU,KAAA;CAChE,EAAA,MAAM,EAAE,IAAS,EAAA,GAAA,KAAA,CAAA;CACjB,EAAM,MAAA,IAAA,GAAO,IAAK,CAAA,OAAA,CAAQ,IAAK,CAAA,EAAA,CAAA,CAAA;CAE/B,EAAA,+DAAQQ,eAAD,EAAA;CAAA,IAAO,KAAO,EAAA,IAAA;CAAA,GAAA,CAAA,CAAA;CAAA,CAAA,CAAA,CAAA;CAEvB,QAAA,CAAS,WAAc,GAAA,UAAA;;CCNhB,MAAM,WAAkC,GAAAR,yBAAA,CAAM,IAAK,CAAA,CAAC,KAAU,KAAA;CACnE,EAAA,MAAM,EAAE,IAAS,EAAA,GAAA,KAAA,CAAA;CACjB,EAAM,MAAA,IAAA,GAAO,IAAK,CAAA,OAAA,CAAQ,IAAK,CAAA,EAAA,CAAA,CAAA;CAE/B,EAAA,+DAAQS,kBAAD,EAAA;CAAA,IAAU,GAAK,EAAA,IAAA;CAAA,GAAA,CAAA,CAAA;CAAA,CAAA,CAAA,CAAA;CAExB,WAAA,CAAY,WAAc,GAAA,aAAA;;CCPnB,MAAM,OAA8B,GAAAT,yBAAA,CAAM,IAAK,CAAA,CAAC,KAAU,KAAA;CAC/D,EAAA,MAAM,EAAE,IAAS,EAAA,GAAA,KAAA,CAAA;CACjB,EAAM,MAAA,IAAA,GAAO,IAAK,CAAA,OAAA,CAAQ,IAAK,CAAA,EAAA,CAAA,CAAA;CAE/B,EAAO,uBAAAA,yBAAA,CAAA,aAAA,CAAC,KAAD,IAAI,EAAA,IAAA,CAAA,CAAA;CAAA,CAAA,CAAA,CAAA;CAEb,OAAA,CAAQ,WAAc,GAAA,SAAA;;CCNf,MAAM,SAAgC,GAAAA,yBAAA,CAAM,IAAK,CAAA,CAAC,KAAU,KAAA;CACjE,EAAA,MAAM,EAAE,IAAS,EAAA,GAAA,KAAA,CAAA;CACjB,EAAM,MAAA,IAAA,GAAO,IAAK,CAAA,OAAA,CAAQ,IAAK,CAAA,EAAA,CAAA,CAAA;CAE/B,EAAO,uBAAAA,yBAAA,CAAA,aAAA,CAAC,KAAD,IAAI,EAAA,IAAA,CAAA,CAAA;CAAA,CAAA,CAAA,CAAA;CAEb,SAAA,CAAU,WAAc,GAAA,WAAA;;CCNjB,MAAM,aAAoC,GAAAA,yBAAA,CAAM,IAAK,CAAA,CAAC,KAAU,KAAA;CACrE,EAAA,MAAM,EAAE,IAAS,EAAA,GAAA,KAAA,CAAA;CACjB,EAAM,MAAA,IAAA,GAAO,IAAK,CAAA,OAAA,CAAQ,IAAK,CAAA,EAAA,CAAA,CAAA;CAE/B,EAAO,uBAAAA,yBAAA,CAAA,aAAA,CAAC,OAAD,IAAM,EAAA,IAAA,CAAA,CAAA;CAAA,CAAA,CAAA,CAAA;CAEf,aAAA,CAAc,WAAc,GAAA,eAAA;;CCNrB,MAAM,SAAgC,GAAAA,yBAAA,CAAM,IAAK,CAAA,CAAC,KAAU,KAAA;CACjE,EAAA,MAAM,EAAE,IAAS,EAAA,GAAA,KAAA,CAAA;CACjB,EAAM,MAAA,IAAA,GAAO,IAAK,CAAA,OAAA,CAAQ,IAAK,CAAA,EAAA,CAAA,CAAA;CAE/B,EAAO,uBAAAA,yBAAA,CAAA,aAAA,CAAC,OAAD,IAAM,EAAA,IAAA,CAAA,CAAA;CAAA,CAAA,CAAA,CAAA;CAEf,SAAA,CAAU,WAAc,GAAA,WAAA;;;;;;;;;;;;;;;;;;CCLjB,MAAM,OAA8B,GAAAA,yBAAA,CAAM,IAAK,CAAA,CAAC,KAAU,KAAA;CAJjE,EAAA,IAAA,EAAA,CAAA;CAKE,EAAA,MAAM,EAAE,IAAS,EAAA,GAAA,KAAA,CAAA;CACjB,EAAM,MAAA,KAAA,GAAQ,IAAK,CAAA,OAAA,CAAQ,IAAK,CAAA,EAAA,CAAA,CAAA;CAChC,EAAM,MAAA,KAAA,GAAQ,CAAK,EAAA,GAAA,IAAA,CAAA,KAAA,KAAL,IAAc,GAAA,EAAA,GAAA,EAAA,CAAA;CAE5B,EAAA,MAAM,OAAe,GAAA,cAAA,CAAA;CAAA,IACnB,KAAA;CAAA,GACG,EAAA,KAAA,CAAA,CAAA;CAGL,EAAA,+DAAQU,cAAD,EAAA;CAAA,IAAM,MAAM,OAAQ,CAAA,IAAA;CAAA,IAAM,OAAA;CAAA,GAAA,CAAA,CAAA;CAAA,CAAA,CAAA,CAAA;CAEnC,OAAA,CAAQ,WAAc,GAAA,SAAA;;CChBtB,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,WAAW,EAAE,OAAO,QAAQ,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC,oBAAocAAc,CAAC,CAAC,CAAC,EAAC,CAAC,SAAS,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,QAAQ,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,YAAY,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,IAAI,IAAI,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,SAAS,GAAG,CAAC,CAAC,YAAY,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC,qBAAqB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;;;;ACmBruBC,yBAAA,CAAkB,OAAS,EAAA,SAAA,CAAA,CAAA;AAC3BA,yBAAA,CAAkB,GAAK,EAAA,OAAA,CAAA,CAAA;AACvBA,yBAAA,CAAkB,GAAK,EAAA,SAAA,CAAA,CAAA;AACvBA,yBAAA,CAAkB,GAAK,EAAA,aAAA,CAAA,CAAA;AACvBA,yBAAA,CAAkB,GAAK,EAAA,SAAA,CAAA,CAAA;AACvBA,yBAAA,CAAkB,KAAO,EAAA,MAAA,CAAA,CAAA;AACzBA,yBAAA,CAAkB,KAAO,EAAA,MAAA,CAAA,CAAA;AACzBA,yBAAA,CAAkB,MAAQ,EAAA,OAAA,CAAA,CAAA;AAC1BA,yBAAA,CAAkB,IAAM,EAAA,UAAA,CAAA,CAAA;AACxBA,yBAAA,CAAkB,OAAS,EAAA,QAAA,CAAA,CAAA;AAC3BA,yBAAA,CAAkB,UAAY,EAAA,WAAA,CAAA,CAAA;AAC9BA,yBAAA,CAAkB,IAAM,EAAA,WAAA,CAAA,CAAA;AACxBA,yBAAA,CAAkB,MAAQ,EAAA,OAAA,CAAA;;;;;;;;;;;;;;"}