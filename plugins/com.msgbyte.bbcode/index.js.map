{"version":3,"file":"index.js","sources":["../../../plugins/com.msgbyte.bbcode/src/index.tsx"],"sourcesContent":["import React from 'react';\nimport {\n  Loadable,\n  regMessageRender,\n  regMessageTextDecorators,\n} from '@capital/common';\n\nconst PLUGIN_ID = 'com.msgbyte.bbcode';\n\n// 预加载\nimport('./render');\n\nconst BBCode = Loadable(() => import('./render'), {\n  componentName: `${PLUGIN_ID}:renderComponent`,\n  fallback: null,\n});\nlet serialize: (bbcode: string) => string;\nimport('./bbcode/serialize').then((module) => {\n  serialize = module.bbcodeToPlainText;\n});\n\nregMessageRender((message) => {\n  return <BBCode plainText={message} />;\n});\n\nregMessageTextDecorators(() => ({\n  url: (url, label?) =>\n    label ? `[url=${url}]${label}[/url]` : `[url]${url}[/url]`,\n  image: (plain, attrs) => {\n    if (attrs.height && attrs.width) {\n      return `[img height=${attrs.height} width=${attrs.width}]${plain}[/img]`;\n    }\n\n    return `[img]${plain}[/img]`;\n  },\n  card: (plain, attrs) => {\n    const h = [\n      'card',\n      ...Object.entries(attrs).map(([k, v]) => `${k}=${v}`),\n    ].join(' ');\n\n    return `[${h}]${plain}[/card]`;\n  },\n  mention: (userId, userName) => `[at=${userId}]${userName}[/at]`,\n  emoji: (emojiCode) => `[emoji]${stripColons(emojiCode)}[/emoji]`,\n  serialize: (plain: string) => (serialize ? serialize(plain) : plain),\n}));\n\n/**\n * Removes colons on either side\n * of the string if present\n */\nfunction stripColons(str: string): string {\n  const colonIndex = str.indexOf(':');\n  if (colonIndex > -1) {\n    // :emoji: (http://www.emoji-cheat-sheet.com/)\n    if (colonIndex === str.length - 1) {\n      str = str.substring(0, colonIndex);\n      return stripColons(str);\n    } else {\n      str = str.substr(colonIndex + 1);\n      return stripColons(str);\n    }\n  }\n\n  return str;\n}\n"],"names":["Loadable","regMessageRender","regMessageTextDecorators"],"mappings":"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"}