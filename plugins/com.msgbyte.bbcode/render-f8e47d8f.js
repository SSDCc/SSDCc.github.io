definePlugin('@plugins/com.msgbyte.bbcode/render-f8e47d8f.js', ['require', 'exports', 'react', './parser-34594393', '@capital/common', '@capital/component', 'styled-components'], (function (require, exports, React, parser, common, component, styled) { 'use strict';

	function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

	var React__default = /*#__PURE__*/_interopDefaultLegacy(React);
	var styled__default = /*#__PURE__*/_interopDefaultLegacy(styled);

	const word = '[a-fA-F\\d:]';
	const b = options => options && options.includeBoundaries ?
		`(?:(?<=\\s|^)(?=${word})|(?<=${word})(?=\\s|$))` :
		'';

	const v4 = '(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)){3}';

	const v6seg = '[a-fA-F\\d]{1,4}';
	const v6 = `
(?:
(?:${v6seg}:){7}(?:${v6seg}|:)|                                    // 1:2:3:4:5:6:7::  1:2:3:4:5:6:7:8
(?:${v6seg}:){6}(?:${v4}|:${v6seg}|:)|                             // 1:2:3:4:5:6::    1:2:3:4:5:6::8   1:2:3:4:5:6::8  1:2:3:4:5:6::1.2.3.4
(?:${v6seg}:){5}(?::${v4}|(?::${v6seg}){1,2}|:)|                   // 1:2:3:4:5::      1:2:3:4:5::7:8   1:2:3:4:5::8    1:2:3:4:5::7:1.2.3.4
(?:${v6seg}:){4}(?:(?::${v6seg}){0,1}:${v4}|(?::${v6seg}){1,3}|:)| // 1:2:3:4::        1:2:3:4::6:7:8   1:2:3:4::8      1:2:3:4::6:7:1.2.3.4
(?:${v6seg}:){3}(?:(?::${v6seg}){0,2}:${v4}|(?::${v6seg}){1,4}|:)| // 1:2:3::          1:2:3::5:6:7:8   1:2:3::8        1:2:3::5:6:7:1.2.3.4
(?:${v6seg}:){2}(?:(?::${v6seg}){0,3}:${v4}|(?::${v6seg}){1,5}|:)| // 1:2::            1:2::4:5:6:7:8   1:2::8          1:2::4:5:6:7:1.2.3.4
(?:${v6seg}:){1}(?:(?::${v6seg}){0,4}:${v4}|(?::${v6seg}){1,6}|:)| // 1::              1::3:4:5:6:7:8   1::8            1::3:4:5:6:7:1.2.3.4
(?::(?:(?::${v6seg}){0,5}:${v4}|(?::${v6seg}){1,7}|:))             // ::2:3:4:5:6:7:8  ::2:3:4:5:6:7:8  ::8             ::1.2.3.4
)(?:%[0-9a-zA-Z]{1,})?                                             // %eth0            %1
`.replace(/\s*\/\/.*$/gm, '').replace(/\n/g, '').trim();

	// Pre-compile only the exact regexes because adding a global flag make regexes stateful
	const v46Exact = new RegExp(`(?:^${v4}$)|(?:^${v6}$)`);
	const v4exact = new RegExp(`^${v4}$`);
	const v6exact = new RegExp(`^${v6}$`);

	const ip = options => options && options.exact ?
		v46Exact :
		new RegExp(`(?:${b(options)}${v4}${b(options)})|(?:${b(options)}${v6}${b(options)})`, 'g');

	ip.v4 = options => options && options.exact ? v4exact : new RegExp(`${b(options)}${v4}${b(options)}`, 'g');
	ip.v6 = options => options && options.exact ? v6exact : new RegExp(`${b(options)}${v6}${b(options)}`, 'g');

	var ipRegex$1 = ip;

	var require$$1 = [
		"aaa",
		"aarp",
		"abarth",
		"abb",
		"abbott",
		"abbvie",
		"abc",
		"able",
		"abogado",
		"abudhabi",
		"ac",
		"academy",
		"accenture",
		"accountant",
		"accountants",
		"aco",
		"actor",
		"ad",
		"adac",
		"ads",
		"adult",
		"ae",
		"aeg",
		"aero",
		"aetna",
		"af",
		"afl",
		"africa",
		"ag",
		"agakhan",
		"agency",
		"ai",
		"aig",
		"airbus",
		"airforce",
		"airtel",
		"akdn",
		"al",
		"alfaromeo",
		"alibaba",
		"alipay",
		"allfinanz",
		"allstate",
		"ally",
		"alsace",
		"alstom",
		"am",
		"amazon",
		"americanexpress",
		"americanfamily",
		"amex",
		"amfam",
		"amica",
		"amsterdam",
		"analytics",
		"android",
		"anquan",
		"anz",
		"ao",
		"aol",
		"apartments",
		"app",
		"apple",
		"aq",
		"aquarelle",
		"ar",
		"arab",
		"aramco",
		"archi",
		"army",
		"arpa",
		"art",
		"arte",
		"as",
		"asda",
		"asia",
		"associates",
		"at",
		"athleta",
		"attorney",
		"au",
		"auction",
		"audi",
		"audible",
		"audio",
		"auspost",
		"author",
		"auto",
		"autos",
		"avianca",
		"aw",
		"aws",
		"ax",
		"axa",
		"az",
		"azure",
		"ba",
		"baby",
		"baidu",
		"banamex",
		"bananarepublic",
		"band",
		"bank",
		"bar",
		"barcelona",
		"barclaycard",
		"barclays",
		"barefoot",
		"bargains",
		"baseball",
		"basketball",
		"bauhaus",
		"bayern",
		"bb",
		"bbc",
		"bbt",
		"bbva",
		"bcg",
		"bcn",
		"bd",
		"be",
		"beats",
		"beauty",
		"beer",
		"bentley",
		"berlin",
		"best",
		"bestbuy",
		"bet",
		"bf",
		"bg",
		"bh",
		"bharti",
		"bi",
		"bible",
		"bid",
		"bike",
		"bing",
		"bingo",
		"bio",
		"biz",
		"bj",
		"black",
		"blackfriday",
		"blockbuster",
		"blog",
		"bloomberg",
		"blue",
		"bm",
		"bms",
		"bmw",
		"bn",
		"bnpparibas",
		"bo",
		"boats",
		"boehringer",
		"bofa",
		"bom",
		"bond",
		"boo",
		"book",
		"booking",
		"bosch",
		"bostik",
		"boston",
		"bot",
		"boutique",
		"box",
		"br",
		"bradesco",
		"bridgestone",
		"broadway",
		"broker",
		"brother",
		"brussels",
		"bs",
		"bt",
		"bugatti",
		"build",
		"builders",
		"business",
		"buy",
		"buzz",
		"bv",
		"bw",
		"by",
		"bz",
		"bzh",
		"ca",
		"cab",
		"cafe",
		"cal",
		"call",
		"calvinklein",
		"cam",
		"camera",
		"camp",
		"cancerresearch",
		"canon",
		"capetown",
		"capital",
		"capitalone",
		"car",
		"caravan",
		"cards",
		"care",
		"career",
		"careers",
		"cars",
		"casa",
		"case",
		"cash",
		"casino",
		"cat",
		"catering",
		"catholic",
		"cba",
		"cbn",
		"cbre",
		"cbs",
		"cc",
		"cd",
		"center",
		"ceo",
		"cern",
		"cf",
		"cfa",
		"cfd",
		"cg",
		"ch",
		"chanel",
		"channel",
		"charity",
		"chase",
		"chat",
		"cheap",
		"chintai",
		"christmas",
		"chrome",
		"church",
		"ci",
		"cipriani",
		"circle",
		"cisco",
		"citadel",
		"citi",
		"citic",
		"city",
		"cityeats",
		"ck",
		"cl",
		"claims",
		"cleaning",
		"click",
		"clinic",
		"clinique",
		"clothing",
		"cloud",
		"club",
		"clubmed",
		"cm",
		"cn",
		"co",
		"coach",
		"codes",
		"coffee",
		"college",
		"cologne",
		"com",
		"comcast",
		"commbank",
		"community",
		"company",
		"compare",
		"computer",
		"comsec",
		"condos",
		"construction",
		"consulting",
		"contact",
		"contractors",
		"cooking",
		"cookingchannel",
		"cool",
		"coop",
		"corsica",
		"country",
		"coupon",
		"coupons",
		"courses",
		"cpa",
		"cr",
		"credit",
		"creditcard",
		"creditunion",
		"cricket",
		"crown",
		"crs",
		"cruise",
		"cruises",
		"cu",
		"cuisinella",
		"cv",
		"cw",
		"cx",
		"cy",
		"cymru",
		"cyou",
		"cz",
		"dabur",
		"dad",
		"dance",
		"data",
		"date",
		"dating",
		"datsun",
		"day",
		"dclk",
		"dds",
		"de",
		"deal",
		"dealer",
		"deals",
		"degree",
		"delivery",
		"dell",
		"deloitte",
		"delta",
		"democrat",
		"dental",
		"dentist",
		"desi",
		"design",
		"dev",
		"dhl",
		"diamonds",
		"diet",
		"digital",
		"direct",
		"directory",
		"discount",
		"discover",
		"dish",
		"diy",
		"dj",
		"dk",
		"dm",
		"dnp",
		"do",
		"docs",
		"doctor",
		"dog",
		"domains",
		"dot",
		"download",
		"drive",
		"dtv",
		"dubai",
		"dunlop",
		"dupont",
		"durban",
		"dvag",
		"dvr",
		"dz",
		"earth",
		"eat",
		"ec",
		"eco",
		"edeka",
		"edu",
		"education",
		"ee",
		"eg",
		"email",
		"emerck",
		"energy",
		"engineer",
		"engineering",
		"enterprises",
		"epson",
		"equipment",
		"er",
		"ericsson",
		"erni",
		"es",
		"esq",
		"estate",
		"et",
		"etisalat",
		"eu",
		"eurovision",
		"eus",
		"events",
		"exchange",
		"expert",
		"exposed",
		"express",
		"extraspace",
		"fage",
		"fail",
		"fairwinds",
		"faith",
		"family",
		"fan",
		"fans",
		"farm",
		"farmers",
		"fashion",
		"fast",
		"fedex",
		"feedback",
		"ferrari",
		"ferrero",
		"fi",
		"fiat",
		"fidelity",
		"fido",
		"film",
		"final",
		"finance",
		"financial",
		"fire",
		"firestone",
		"firmdale",
		"fish",
		"fishing",
		"fit",
		"fitness",
		"fj",
		"fk",
		"flickr",
		"flights",
		"flir",
		"florist",
		"flowers",
		"fly",
		"fm",
		"fo",
		"foo",
		"food",
		"foodnetwork",
		"football",
		"ford",
		"forex",
		"forsale",
		"forum",
		"foundation",
		"fox",
		"fr",
		"free",
		"fresenius",
		"frl",
		"frogans",
		"frontdoor",
		"frontier",
		"ftr",
		"fujitsu",
		"fun",
		"fund",
		"furniture",
		"futbol",
		"fyi",
		"ga",
		"gal",
		"gallery",
		"gallo",
		"gallup",
		"game",
		"games",
		"gap",
		"garden",
		"gay",
		"gb",
		"gbiz",
		"gd",
		"gdn",
		"ge",
		"gea",
		"gent",
		"genting",
		"george",
		"gf",
		"gg",
		"ggee",
		"gh",
		"gi",
		"gift",
		"gifts",
		"gives",
		"giving",
		"gl",
		"glass",
		"gle",
		"global",
		"globo",
		"gm",
		"gmail",
		"gmbh",
		"gmo",
		"gmx",
		"gn",
		"godaddy",
		"gold",
		"goldpoint",
		"golf",
		"goo",
		"goodyear",
		"goog",
		"google",
		"gop",
		"got",
		"gov",
		"gp",
		"gq",
		"gr",
		"grainger",
		"graphics",
		"gratis",
		"green",
		"gripe",
		"grocery",
		"group",
		"gs",
		"gt",
		"gu",
		"guardian",
		"gucci",
		"guge",
		"guide",
		"guitars",
		"guru",
		"gw",
		"gy",
		"hair",
		"hamburg",
		"hangout",
		"haus",
		"hbo",
		"hdfc",
		"hdfcbank",
		"health",
		"healthcare",
		"help",
		"helsinki",
		"here",
		"hermes",
		"hgtv",
		"hiphop",
		"hisamitsu",
		"hitachi",
		"hiv",
		"hk",
		"hkt",
		"hm",
		"hn",
		"hockey",
		"holdings",
		"holiday",
		"homedepot",
		"homegoods",
		"homes",
		"homesense",
		"honda",
		"horse",
		"hospital",
		"host",
		"hosting",
		"hot",
		"hoteles",
		"hotels",
		"hotmail",
		"house",
		"how",
		"hr",
		"hsbc",
		"ht",
		"hu",
		"hughes",
		"hyatt",
		"hyundai",
		"ibm",
		"icbc",
		"ice",
		"icu",
		"id",
		"ie",
		"ieee",
		"ifm",
		"ikano",
		"il",
		"im",
		"imamat",
		"imdb",
		"immo",
		"immobilien",
		"in",
		"inc",
		"industries",
		"infiniti",
		"info",
		"ing",
		"ink",
		"institute",
		"insurance",
		"insure",
		"int",
		"international",
		"intuit",
		"investments",
		"io",
		"ipiranga",
		"iq",
		"ir",
		"irish",
		"is",
		"ismaili",
		"ist",
		"istanbul",
		"it",
		"itau",
		"itv",
		"jaguar",
		"java",
		"jcb",
		"je",
		"jeep",
		"jetzt",
		"jewelry",
		"jio",
		"jll",
		"jm",
		"jmp",
		"jnj",
		"jo",
		"jobs",
		"joburg",
		"jot",
		"joy",
		"jp",
		"jpmorgan",
		"jprs",
		"juegos",
		"juniper",
		"kaufen",
		"kddi",
		"ke",
		"kerryhotels",
		"kerrylogistics",
		"kerryproperties",
		"kfh",
		"kg",
		"kh",
		"ki",
		"kia",
		"kids",
		"kim",
		"kinder",
		"kindle",
		"kitchen",
		"kiwi",
		"km",
		"kn",
		"koeln",
		"komatsu",
		"kosher",
		"kp",
		"kpmg",
		"kpn",
		"kr",
		"krd",
		"kred",
		"kuokgroup",
		"kw",
		"ky",
		"kyoto",
		"kz",
		"la",
		"lacaixa",
		"lamborghini",
		"lamer",
		"lancaster",
		"lancia",
		"land",
		"landrover",
		"lanxess",
		"lasalle",
		"lat",
		"latino",
		"latrobe",
		"law",
		"lawyer",
		"lb",
		"lc",
		"lds",
		"lease",
		"leclerc",
		"lefrak",
		"legal",
		"lego",
		"lexus",
		"lgbt",
		"li",
		"lidl",
		"life",
		"lifeinsurance",
		"lifestyle",
		"lighting",
		"like",
		"lilly",
		"limited",
		"limo",
		"lincoln",
		"linde",
		"link",
		"lipsy",
		"live",
		"living",
		"lk",
		"llc",
		"llp",
		"loan",
		"loans",
		"locker",
		"locus",
		"loft",
		"lol",
		"london",
		"lotte",
		"lotto",
		"love",
		"lpl",
		"lplfinancial",
		"lr",
		"ls",
		"lt",
		"ltd",
		"ltda",
		"lu",
		"lundbeck",
		"luxe",
		"luxury",
		"lv",
		"ly",
		"ma",
		"macys",
		"madrid",
		"maif",
		"maison",
		"makeup",
		"man",
		"management",
		"mango",
		"map",
		"market",
		"marketing",
		"markets",
		"marriott",
		"marshalls",
		"maserati",
		"mattel",
		"mba",
		"mc",
		"mckinsey",
		"md",
		"me",
		"med",
		"media",
		"meet",
		"melbourne",
		"meme",
		"memorial",
		"men",
		"menu",
		"merckmsd",
		"mg",
		"mh",
		"miami",
		"microsoft",
		"mil",
		"mini",
		"mint",
		"mit",
		"mitsubishi",
		"mk",
		"ml",
		"mlb",
		"mls",
		"mm",
		"mma",
		"mn",
		"mo",
		"mobi",
		"mobile",
		"moda",
		"moe",
		"moi",
		"mom",
		"monash",
		"money",
		"monster",
		"mormon",
		"mortgage",
		"moscow",
		"moto",
		"motorcycles",
		"mov",
		"movie",
		"mp",
		"mq",
		"mr",
		"ms",
		"msd",
		"mt",
		"mtn",
		"mtr",
		"mu",
		"museum",
		"music",
		"mutual",
		"mv",
		"mw",
		"mx",
		"my",
		"mz",
		"na",
		"nab",
		"nagoya",
		"name",
		"natura",
		"navy",
		"nba",
		"nc",
		"ne",
		"nec",
		"net",
		"netbank",
		"netflix",
		"network",
		"neustar",
		"new",
		"news",
		"next",
		"nextdirect",
		"nexus",
		"nf",
		"nfl",
		"ng",
		"ngo",
		"nhk",
		"ni",
		"nico",
		"nike",
		"nikon",
		"ninja",
		"nissan",
		"nissay",
		"nl",
		"no",
		"nokia",
		"northwesternmutual",
		"norton",
		"now",
		"nowruz",
		"nowtv",
		"np",
		"nr",
		"nra",
		"nrw",
		"ntt",
		"nu",
		"nyc",
		"nz",
		"obi",
		"observer",
		"office",
		"okinawa",
		"olayan",
		"olayangroup",
		"oldnavy",
		"ollo",
		"om",
		"omega",
		"one",
		"ong",
		"onl",
		"online",
		"ooo",
		"open",
		"oracle",
		"orange",
		"org",
		"organic",
		"origins",
		"osaka",
		"otsuka",
		"ott",
		"ovh",
		"pa",
		"page",
		"panasonic",
		"paris",
		"pars",
		"partners",
		"parts",
		"party",
		"passagens",
		"pay",
		"pccw",
		"pe",
		"pet",
		"pf",
		"pfizer",
		"pg",
		"ph",
		"pharmacy",
		"phd",
		"philips",
		"phone",
		"photo",
		"photography",
		"photos",
		"physio",
		"pics",
		"pictet",
		"pictures",
		"pid",
		"pin",
		"ping",
		"pink",
		"pioneer",
		"pizza",
		"pk",
		"pl",
		"place",
		"play",
		"playstation",
		"plumbing",
		"plus",
		"pm",
		"pn",
		"pnc",
		"pohl",
		"poker",
		"politie",
		"porn",
		"post",
		"pr",
		"pramerica",
		"praxi",
		"press",
		"prime",
		"pro",
		"prod",
		"productions",
		"prof",
		"progressive",
		"promo",
		"properties",
		"property",
		"protection",
		"pru",
		"prudential",
		"ps",
		"pt",
		"pub",
		"pw",
		"pwc",
		"py",
		"qa",
		"qpon",
		"quebec",
		"quest",
		"racing",
		"radio",
		"re",
		"read",
		"realestate",
		"realtor",
		"realty",
		"recipes",
		"red",
		"redstone",
		"redumbrella",
		"rehab",
		"reise",
		"reisen",
		"reit",
		"reliance",
		"ren",
		"rent",
		"rentals",
		"repair",
		"report",
		"republican",
		"rest",
		"restaurant",
		"review",
		"reviews",
		"rexroth",
		"rich",
		"richardli",
		"ricoh",
		"ril",
		"rio",
		"rip",
		"ro",
		"rocher",
		"rocks",
		"rodeo",
		"rogers",
		"room",
		"rs",
		"rsvp",
		"ru",
		"rugby",
		"ruhr",
		"run",
		"rw",
		"rwe",
		"ryukyu",
		"sa",
		"saarland",
		"safe",
		"safety",
		"sakura",
		"sale",
		"salon",
		"samsclub",
		"samsung",
		"sandvik",
		"sandvikcoromant",
		"sanofi",
		"sap",
		"sarl",
		"sas",
		"save",
		"saxo",
		"sb",
		"sbi",
		"sbs",
		"sc",
		"sca",
		"scb",
		"schaeffler",
		"schmidt",
		"scholarships",
		"school",
		"schule",
		"schwarz",
		"science",
		"scot",
		"sd",
		"se",
		"search",
		"seat",
		"secure",
		"security",
		"seek",
		"select",
		"sener",
		"services",
		"ses",
		"seven",
		"sew",
		"sex",
		"sexy",
		"sfr",
		"sg",
		"sh",
		"shangrila",
		"sharp",
		"shaw",
		"shell",
		"shia",
		"shiksha",
		"shoes",
		"shop",
		"shopping",
		"shouji",
		"show",
		"showtime",
		"si",
		"silk",
		"sina",
		"singles",
		"site",
		"sj",
		"sk",
		"ski",
		"skin",
		"sky",
		"skype",
		"sl",
		"sling",
		"sm",
		"smart",
		"smile",
		"sn",
		"sncf",
		"so",
		"soccer",
		"social",
		"softbank",
		"software",
		"sohu",
		"solar",
		"solutions",
		"song",
		"sony",
		"soy",
		"spa",
		"space",
		"sport",
		"spot",
		"sr",
		"srl",
		"ss",
		"st",
		"stada",
		"staples",
		"star",
		"statebank",
		"statefarm",
		"stc",
		"stcgroup",
		"stockholm",
		"storage",
		"store",
		"stream",
		"studio",
		"study",
		"style",
		"su",
		"sucks",
		"supplies",
		"supply",
		"support",
		"surf",
		"surgery",
		"suzuki",
		"sv",
		"swatch",
		"swiss",
		"sx",
		"sy",
		"sydney",
		"systems",
		"sz",
		"tab",
		"taipei",
		"talk",
		"taobao",
		"target",
		"tatamotors",
		"tatar",
		"tattoo",
		"tax",
		"taxi",
		"tc",
		"tci",
		"td",
		"tdk",
		"team",
		"tech",
		"technology",
		"tel",
		"temasek",
		"tennis",
		"teva",
		"tf",
		"tg",
		"th",
		"thd",
		"theater",
		"theatre",
		"tiaa",
		"tickets",
		"tienda",
		"tiffany",
		"tips",
		"tires",
		"tirol",
		"tj",
		"tjmaxx",
		"tjx",
		"tk",
		"tkmaxx",
		"tl",
		"tm",
		"tmall",
		"tn",
		"to",
		"today",
		"tokyo",
		"tools",
		"top",
		"toray",
		"toshiba",
		"total",
		"tours",
		"town",
		"toyota",
		"toys",
		"tr",
		"trade",
		"trading",
		"training",
		"travel",
		"travelchannel",
		"travelers",
		"travelersinsurance",
		"trust",
		"trv",
		"tt",
		"tube",
		"tui",
		"tunes",
		"tushu",
		"tv",
		"tvs",
		"tw",
		"tz",
		"ua",
		"ubank",
		"ubs",
		"ug",
		"uk",
		"unicom",
		"university",
		"uno",
		"uol",
		"ups",
		"us",
		"uy",
		"uz",
		"va",
		"vacations",
		"vana",
		"vanguard",
		"vc",
		"ve",
		"vegas",
		"ventures",
		"verisign",
		"vermögensberater",
		"vermögensberatung",
		"versicherung",
		"vet",
		"vg",
		"vi",
		"viajes",
		"video",
		"vig",
		"viking",
		"villas",
		"vin",
		"vip",
		"virgin",
		"visa",
		"vision",
		"viva",
		"vivo",
		"vlaanderen",
		"vn",
		"vodka",
		"volkswagen",
		"volvo",
		"vote",
		"voting",
		"voto",
		"voyage",
		"vu",
		"vuelos",
		"wales",
		"walmart",
		"walter",
		"wang",
		"wanggou",
		"watch",
		"watches",
		"weather",
		"weatherchannel",
		"webcam",
		"weber",
		"website",
		"wed",
		"wedding",
		"weibo",
		"weir",
		"wf",
		"whoswho",
		"wien",
		"wiki",
		"williamhill",
		"win",
		"windows",
		"wine",
		"winners",
		"wme",
		"wolterskluwer",
		"woodside",
		"work",
		"works",
		"world",
		"wow",
		"ws",
		"wtc",
		"wtf",
		"xbox",
		"xerox",
		"xfinity",
		"xihuan",
		"xin",
		"xxx",
		"xyz",
		"yachts",
		"yahoo",
		"yamaxun",
		"yandex",
		"ye",
		"yodobashi",
		"yoga",
		"yokohama",
		"you",
		"youtube",
		"yt",
		"yun",
		"za",
		"zappos",
		"zara",
		"zero",
		"zip",
		"zm",
		"zone",
		"zuerich",
		"zw",
		"ελ",
		"ευ",
		"бг",
		"бел",
		"дети",
		"ею",
		"католик",
		"ком",
		"мкд",
		"мон",
		"москва",
		"онлайн",
		"орг",
		"рус",
		"рф",
		"сайт",
		"срб",
		"укр",
		"қаз",
		"հայ",
		"ישראל",
		"קום",
		"ابوظبي",
		"اتصالات",
		"ارامكو",
		"الاردن",
		"البحرين",
		"الجزائر",
		"السعودية",
		"العليان",
		"المغرب",
		"امارات",
		"ایران",
		"بارت",
		"بازار",
		"بيتك",
		"بھارت",
		"تونس",
		"سودان",
		"سورية",
		"شبكة",
		"عراق",
		"عرب",
		"عمان",
		"فلسطين",
		"قطر",
		"كاثوليك",
		"كوم",
		"مصر",
		"مليسيا",
		"موريتانيا",
		"موقع",
		"همراه",
		"پاکستان",
		"ڀارت",
		"कॉम",
		"नेट",
		"भारत",
		"भारतम्",
		"भारोत",
		"संगठन",
		"বাংলা",
		"ভারত",
		"ভাৰত",
		"ਭਾਰਤ",
		"ભારત",
		"ଭାରତ",
		"இந்தியா",
		"இலங்கை",
		"சிங்கப்பூர்",
		"భారత్",
		"ಭಾರತ",
		"ഭാരതം",
		"ලංකා",
		"คอม",
		"ไทย",
		"ລາວ",
		"გე",
		"みんな",
		"アマゾン",
		"クラウド",
		"グーグル",
		"コム",
		"ストア",
		"セール",
		"ファッション",
		"ポイント",
		"世界",
		"中信",
		"中国",
		"中國",
		"中文网",
		"亚马逊",
		"企业",
		"佛山",
		"信息",
		"健康",
		"八卦",
		"公司",
		"公益",
		"台湾",
		"台灣",
		"商城",
		"商店",
		"商标",
		"嘉里",
		"嘉里大酒店",
		"在线",
		"大拿",
		"天主教",
		"娱乐",
		"家電",
		"广东",
		"微博",
		"慈善",
		"我爱你",
		"手机",
		"招聘",
		"政务",
		"政府",
		"新加坡",
		"新闻",
		"时尚",
		"書籍",
		"机构",
		"淡马锡",
		"游戏",
		"澳門",
		"点看",
		"移动",
		"组织机构",
		"网址",
		"网店",
		"网站",
		"网络",
		"联通",
		"诺基亚",
		"谷歌",
		"购物",
		"通販",
		"集团",
		"電訊盈科",
		"飞利浦",
		"食品",
		"餐厅",
		"香格里拉",
		"香港",
		"닷넷",
		"닷컴",
		"삼성",
		"한국"
	];

	const ipRegex = ipRegex$1;
	const tlds = require$$1;

	var urlRegex = options => {
		options = {
			strict: true,
			...options
		};

		const protocol = `(?:(?:[a-z]+:)?//)${options.strict ? '' : '?'}`;
		const auth = '(?:\\S+(?::\\S*)?@)?';
		const ip = ipRegex.v4().source;
		const host = '(?:(?:[a-z\\u00a1-\\uffff0-9][-_]*)*[a-z\\u00a1-\\uffff0-9]+)';
		const domain = '(?:\\.(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)*';
		const tld = `(?:\\.${options.strict ? '(?:[a-z\\u00a1-\\uffff]{2,})' : `(?:${tlds.sort((a, b) => b.length - a.length).join('|')})`})\\.?`;
		const port = '(?::\\d{2,5})?';
		const path = '(?:[/?#][^\\s"]*)?';
		const regex = `(?:${protocol}|www\\.)${auth}(?:localhost|${ip}|${host}${domain}${tld})${port}${path}`;

		return options.exact ? new RegExp(`(?:^${regex}$)`, 'i') : new RegExp(regex, 'ig');
	};

	function preProcessLinkText(plainText) {
	  const text = plainText.replace(urlRegex({ exact: false, strict: true }), "[url]$&[/url]");
	  return text;
	}
	function preProcessText(plainText) {
	  return parser.bbcodeParser.preProcessText(plainText, preProcessLinkText);
	}
	const BBCode = React__default["default"].memo(({ plainText }) => {
	  const bbcodeComponent = parser.bbcodeParser.render(preProcessText(plainText != null ? plainText : ""));
	  return /* @__PURE__ */ React__default["default"].createElement(React.Fragment, null, bbcodeComponent);
	});
	BBCode.displayName = "BBCode";

	const Highlight = common.Loadable(() => new Promise(function (resolve, reject) { require(['./Highlight-3dc5c156'], resolve, reject); }));
	const CodeTag = React__default["default"].memo((props) => {
	  var _a;
	  const { node } = props;
	  const text = node.content.join("");
	  const language = (_a = node.attrs.language) != null ? _a : "bash";
	  return /* @__PURE__ */ React__default["default"].createElement(Highlight, {
	    language,
	    code: text
	  });
	});
	CodeTag.displayName = "CodeTag";

	var __defProp$1 = Object.defineProperty;
	var __getOwnPropSymbols$1 = Object.getOwnPropertySymbols;
	var __hasOwnProp$1 = Object.prototype.hasOwnProperty;
	var __propIsEnum$1 = Object.prototype.propertyIsEnumerable;
	var __defNormalProp$1 = (obj, key, value) => key in obj ? __defProp$1(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
	var __spreadValues$1 = (a, b) => {
	  for (var prop in b || (b = {}))
	    if (__hasOwnProp$1.call(b, prop))
	      __defNormalProp$1(a, prop, b[prop]);
	  if (__getOwnPropSymbols$1)
	    for (var prop of __getOwnPropSymbols$1(b)) {
	      if (__propIsEnum$1.call(b, prop))
	        __defNormalProp$1(a, prop, b[prop]);
	    }
	  return a;
	};
	const MAX_HEIGHT = 320;
	const MAX_WIDTH = 320;
	const imageStyle = {
	  maxHeight: MAX_HEIGHT,
	  maxWidth: MAX_WIDTH,
	  width: "auto"
	};
	function parseImageAttr(attr) {
	  const height = Number(attr.height);
	  const width = Number(attr.width);
	  if (!(height > 0 && width > 0)) {
	    return {};
	  }
	  const ratio = Math.max(height / MAX_HEIGHT, width / MAX_WIDTH);
	  return {
	    height: height / ratio,
	    width: width / ratio
	  };
	}
	const ImgTag = React__default["default"].memo((props) => {
	  var _a;
	  const { node } = props;
	  const text = node.content.join("");
	  const url = (_a = node.attrs.url) != null ? _a : text;
	  return /* @__PURE__ */ React__default["default"].createElement(component.Image, {
	    style: __spreadValues$1(__spreadValues$1({}, imageStyle), parseImageAttr(node.attrs)),
	    preview: true,
	    src: url
	  });
	});
	ImgTag.displayName = "ImgTag";

	const MentionTag = React__default["default"].memo((props) => {
	  const { node } = props;
	  const fallbackName = node.content.join("");
	  const userId = node.attrs.at;
	  return /* @__PURE__ */ React__default["default"].createElement("span", {
	    className: "plugin-bbcode-mention-tag",
	    "data-userid": userId
	  }, "@", /* @__PURE__ */ React__default["default"].createElement(component.UserName, {
	    userId,
	    fallbackName
	  }));
	});
	MentionTag.displayName = "MentionTag";

	const PlainText = React__default["default"].memo((props) => /* @__PURE__ */ React__default["default"].createElement("pre", {
	  style: { display: "inline", whiteSpace: "break-spaces" }
	}, props.children));
	PlainText.displayName = "PlainText";

	const UnderlineSpan = styled__default["default"].span`
  text-decoration: underline;
  text-decoration-style: dotted;
`;
	const UrlTag = React__default["default"].memo((props) => {
	  var _a;
	  const { node } = props;
	  const text = node.content.join("");
	  const url = (_a = node.attrs.url) != null ? _a : text;
	  if (url.startsWith("/")) {
	    return /* @__PURE__ */ React__default["default"].createElement(component.Link, {
	      to: url
	    }, /* @__PURE__ */ React__default["default"].createElement(UnderlineSpan, null, text));
	  }
	  if (url.startsWith(window.location.origin)) {
	    return /* @__PURE__ */ React__default["default"].createElement(component.Link, {
	      to: url.replace(window.location.origin, "")
	    }, /* @__PURE__ */ React__default["default"].createElement(UnderlineSpan, null, text));
	  }
	  return /* @__PURE__ */ React__default["default"].createElement("a", {
	    href: url,
	    title: text,
	    target: "_blank",
	    rel: "noopener noreferrer"
	  }, /* @__PURE__ */ React__default["default"].createElement(UnderlineSpan, null, text));
	});
	UrlTag.displayName = "UrlTag";

	const EmojiTag = React__default["default"].memo((props) => {
	  const { node } = props;
	  const code = node.content.join("");
	  return /* @__PURE__ */ React__default["default"].createElement(component.Emoji, {
	    emoji: code
	  });
	});
	EmojiTag.displayName = "EmojiTag";

	const MarkdownTag = React__default["default"].memo((props) => {
	  const { node } = props;
	  const text = node.content.join("");
	  return /* @__PURE__ */ React__default["default"].createElement(component.Markdown, {
	    raw: text
	  });
	});
	MarkdownTag.displayName = "MarkdownTag";

	const BoldTag = React__default["default"].memo((props) => {
	  const { node } = props;
	  const text = node.content.join("");
	  return /* @__PURE__ */ React__default["default"].createElement("b", null, text);
	});
	BoldTag.displayName = "BoldTag";

	const ItalicTag = React__default["default"].memo((props) => {
	  const { node } = props;
	  const text = node.content.join("");
	  return /* @__PURE__ */ React__default["default"].createElement("i", null, text);
	});
	ItalicTag.displayName = "ItalicTag";

	const UnderlinedTag = React__default["default"].memo((props) => {
	  const { node } = props;
	  const text = node.content.join("");
	  return /* @__PURE__ */ React__default["default"].createElement("ins", null, text);
	});
	UnderlinedTag.displayName = "UnderlinedTag";

	const DeleteTag = React__default["default"].memo((props) => {
	  const { node } = props;
	  const text = node.content.join("");
	  return /* @__PURE__ */ React__default["default"].createElement("del", null, text);
	});
	DeleteTag.displayName = "DeleteTag";

	var __defProp = Object.defineProperty;
	var __getOwnPropSymbols = Object.getOwnPropertySymbols;
	var __hasOwnProp = Object.prototype.hasOwnProperty;
	var __propIsEnum = Object.prototype.propertyIsEnumerable;
	var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
	var __spreadValues = (a, b) => {
	  for (var prop in b || (b = {}))
	    if (__hasOwnProp.call(b, prop))
	      __defNormalProp(a, prop, b[prop]);
	  if (__getOwnPropSymbols)
	    for (var prop of __getOwnPropSymbols(b)) {
	      if (__propIsEnum.call(b, prop))
	        __defNormalProp(a, prop, b[prop]);
	    }
	  return a;
	};
	const CardTag = React__default["default"].memo((props) => {
	  var _a;
	  const { node } = props;
	  const label = node.content.join("");
	  const attrs = (_a = node.attrs) != null ? _a : {};
	  const payload = __spreadValues({
	    label
	  }, attrs);
	  return /* @__PURE__ */ React__default["default"].createElement(component.Card, {
	    type: payload.type,
	    payload
	  });
	});
	CardTag.displayName = "CardTag";

	var e=[],t=[];function n(n,r){if(n&&"undefined"!=typeof document){var a,s=!0===r.prepend?"prepend":"append",d=!0===r.singleTag,i="string"==typeof r.container?document.querySelector(r.container):document.getElementsByTagName("head")[0];if(d){var u=e.indexOf(i);-1===u&&(u=e.push(i)-1,t[u]={}),a=t[u]&&t[u][s]?t[u][s]:t[u][s]=c();}else a=c();65279===n.charCodeAt(0)&&(n=n.substring(1)),a.styleSheet?a.styleSheet.cssText+=n:a.appendChild(document.createTextNode(n));}function c(){var e=document.createElement("style");if(e.setAttribute("type","text/css"),r.attributes)for(var t=Object.keys(r.attributes),n=0;n<t.length;n++)e.setAttribute(t[n],r.attributes[t[n]]);var a="prepend"===s?"afterbegin":"beforeend";return i.insertAdjacentElement(a,e),e}}

	var css = "/* purgecss start ignore */\n\n.plugin-bbcode-mention-tag {\n  background-color: rgba(88, 101, 242, 0.3);\n  border-radius: 2px;\n  padding: 0 4px;\n}\n\n.plugin-bbcode-mention-tag:hover {\n  background-color: #5865f2;\n}\n\n/* purgecss end ignore */\n";
	n(css,{});

	parser.registerBBCodeTag("_text", PlainText);
	parser.registerBBCodeTag("b", BoldTag);
	parser.registerBBCodeTag("i", ItalicTag);
	parser.registerBBCodeTag("u", UnderlinedTag);
	parser.registerBBCodeTag("s", DeleteTag);
	parser.registerBBCodeTag("url", UrlTag);
	parser.registerBBCodeTag("img", ImgTag);
	parser.registerBBCodeTag("code", CodeTag);
	parser.registerBBCodeTag("at", MentionTag);
	parser.registerBBCodeTag("emoji", EmojiTag);
	parser.registerBBCodeTag("markdown", MarkdownTag);
	parser.registerBBCodeTag("md", MarkdownTag);
	parser.registerBBCodeTag("card", CardTag);

	var render = /*#__PURE__*/Object.freeze({
		__proto__: null,
		'default': BBCode
	});

	exports.n = n;
	exports.render = render;

}));
//# sourceMappingURL=render-f8e47d8f.js.map
